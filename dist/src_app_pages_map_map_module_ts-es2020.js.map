{"version":3,"file":"src_app_pages_map_map_module_ts-es2020.js","mappings":";;;;;;;;;;;;;;;AAAmD;AACZ;AACvC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,cAAc,oDAAO;AACrB;AACA,WAAW,uDAAU,MAAM,oDAAS;AACpC;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACiC;AACA;AACK;AACtC,mDAAQ,UAAU,gDAAK;AACvB,mDAAQ,UAAU,gDAAK;AACW;AACU;AACxB;;;;;;;;;;;;;;;ACXpB;AACA,6BAAe,oCAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACA,6BAAe,oCAAU;AACzB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNuE;AACN;AAC1B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAU;AACpB;AACA;AACA,eAAe,oDAAO;AACtB;AACA,qBAAqB,uDAAU;AAC/B;AACA;AACA,KAAK,oBAAoB,yDAAY;AACrC;AACA;AACA,IAAI,sDAAU;AACd;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc,sDAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,kBAAkB,4DAAgB,QAAQ,oDAAS,oBAAoB;AACvE,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,WAAW,8CAA8C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;ACzBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB2C;AAC0B;AAC1B;AAC1D,4FAA4F;AAC5F,UAAU;AACsD;AACtB;AACI;AACN;IAO3B,gBAAgB,SAAhB,gBAAgB;IAmE3B,YACS,SAAyC,EACzC,MAAiB,EACQ,IAAS,EAClC,MAAa;IACpB,oDAAoD;IACpD,UAAU;IACF,aAA4B,EAC5B,UAAsB;QAPvB,cAAS,GAAT,SAAS,CAAgC;QACzC,WAAM,GAAN,MAAM,CAAW;QACQ,SAAI,GAAJ,IAAI,CAAK;QAClC,WAAM,GAAN,MAAM,CAAO;QAGZ,kBAAa,GAAb,aAAa,CAAe;QAC5B,eAAU,GAAV,UAAU,CAAY;QA1EhC,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,EAAE,CAAC;QAEhB,WAAM,GAAa;YACjB;gBACE,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,GAAG;aACX;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,KAAK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ACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,2BAA2B,gDAAM;AACjC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB,6CAAI,GAAG,2BAA2B;AACxD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kEAAkE,4DAAmB;AACrF;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6CAA6C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAA6C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA,2BAA2B,gDAAM;AACjC;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,+DAAe,IAAI,EAAC","sources":["./node_modules/timeago.js/esm/format.js","./node_modules/timeago.js/esm/index.js","./node_modules/timeago.js/esm/lang/en_US.js","./node_modules/timeago.js/esm/lang/zh_CN.js","./node_modules/timeago.js/esm/realtime.js","./node_modules/timeago.js/esm/register.js","./node_modules/timeago.js/esm/utils/date.js","./node_modules/timeago.js/esm/utils/dom.js","./node_modules/timeago.js/lib/lang/es.js","./src/app/pages/map/actions/actions.component.ts","./src/app/pages/map/info-alert/info-alert.component.ts","./src/app/pages/map/map.component.ts","./src/app/pages/map/map.module.ts","./src/app/pages/map/map.routes.ts","./src/app/services/notifications.service.ts","./src/app/services/socket.service.ts","./src/app/pages/map/actions/actions.component.html","./src/app/pages/map/info-alert/info-alert.component.html","./src/app/pages/map/map.component.html","./node_modules/ol/style/Text.js"],"sourcesContent":["import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n","var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1(number, index) {\n    return [\n        ['justo ahora', 'en un rato'],\n        ['hace %s segundos', 'en %s segundos'],\n        ['hace 1 minuto', 'en 1 minuto'],\n        ['hace %s minutos', 'en %s minutos'],\n        ['hace 1 hora', 'en 1 hora'],\n        ['hace %s horas', 'en %s horas'],\n        ['hace 1 día', 'en 1 día'],\n        ['hace %s días', 'en %s días'],\n        ['hace 1 semana', 'en 1 semana'],\n        ['hace %s semanas', 'en %s semanas'],\n        ['hace 1 mes', 'en 1 mes'],\n        ['hace %s meses', 'en %s meses'],\n        ['hace 1 año', 'en 1 año'],\n        ['hace %s años', 'en %s años'],\n    ][index];\n}\nexports.default = default_1;\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n// ELIMINA: import { MqttServiceService } from 'src/app/services/mqtt/mqtt-service.service';\r\n// AGREGA:\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { Event } from 'typescript.events';\r\nimport { register, format } from 'timeago.js';\r\nimport es from 'timeago.js/lib/lang/es';\r\n\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.component.html',\r\n  styleUrls: ['./actions.component.scss']\r\n})\r\nexport class ActionsComponent implements OnInit {\r\n  name = '';\r\n  identifier = '';\r\n\r\n  alerts: object[] = [\r\n    {\r\n      text: 'SOS',\r\n      value: '1'\r\n    },\r\n    {\r\n      text: 'SOSPECHOSO',\r\n      value: '2'\r\n    },\r\n    {\r\n      text: 'INUNDACIÓN',\r\n      value: '6'\r\n    },\r\n    {\r\n      text: 'TERREMOTO',\r\n      value: '7'\r\n    },\r\n    {\r\n      text: 'DISUASIVA',\r\n      value: '10'\r\n    },\r\n    {\r\n      text: 'LIBADORES',\r\n      value: '11'\r\n    },\r\n    {\r\n      text: 'EXTORSIONADOR',\r\n      value: '12'\r\n    },\r\n    {\r\n      text: 'P0',\r\n      value: '13'\r\n    },\r\n    {\r\n      text: 'P1',\r\n      value: '14'\r\n    },\r\n    {\r\n      text: 'P2',\r\n      value: '15'\r\n    }\r\n  ];\r\n\r\n  icons: any[] = [];\r\n\r\n  connected = '';\r\n  connectedAt: Date = new Date();\r\n  connectedTimeAgo = '';\r\n\r\n  powerOutage = '';\r\n  powerOutageAt: Date = new Date();\r\n  powerOutageTimeAgo = '';\r\n\r\n  doorOpen = '';\r\n  doorOpenAt: Date = new Date();\r\n  doorOpenTimeAgo = '';\r\n\r\n  batteryStatus: number | null = null;\r\n  batteryStatusAt: Date = new Date();\r\n  batteryStatusTimeAgo = '';\r\n\r\n  threshold = 12;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ActionsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public events: Event,\r\n    // ELIMINA: private mqttService: MqttServiceService,\r\n    // AGREGA:\r\n    private socketService: SocketService,\r\n    private apiService: ApiService\r\n  ) {\r\n    register('es', es);\r\n    this.name = data.name;\r\n    this.identifier = data.identifier;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLastStats();\r\n    \r\n    // CONECTA EL SOCKET AL INICIAR EL COMPONENTE\r\n    this.socketService.socketConnect(`actions-${this.identifier}`);\r\n  }\r\n\r\n  getLastStats() {\r\n    this.apiService.getCentralInformationLast('battery-status', this.identifier).subscribe((res: any) => {\r\n      this.batteryStatus = res.boxStats[0].batteryStatus;\r\n      this.batteryStatusAt = new Date(res.boxStats[0].createdAt);\r\n      this.batteryStatusTimeAgo = format(this.batteryStatusAt, 'es');\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('sensor-status', this.identifier).subscribe((res: any) => {\r\n      console.log('sensor status', res);\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('power-outage', this.identifier).subscribe((res: any) => {\r\n      this.powerOutage = res.boxStats[0].powerOutage;\r\n      this.powerOutageAt = new Date(res.boxStats[0].createdAt);\r\n      this.powerOutageTimeAgo = format(this.powerOutageAt, 'es');\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('connected', this.identifier).subscribe((res: any) => {\r\n      this.connected = res.boxStats[0].connected;\r\n      this.connectedAt = new Date(res.boxStats[0].createdAt);\r\n      this.connectedTimeAgo = format(this.connectedAt, 'es');\r\n    });\r\n  }\r\n\r\n  sendCommand(payload: any) {\r\n    // REEMPLAZA LA PUBLICACIÓN DIRECTA MQTT POR SOCKET.IO\r\n    // this.mqttService.publishToTopic(`alarma/${this.identifier}`, payload.value);\r\n    \r\n    // USA EL SOCKET SERVICE PARA PUBLICAR A TRAVÉS DEL BACKEND\r\n    this.socketService.publishMqttMessage(\r\n      `alarma/${this.identifier}`, \r\n      payload.value, \r\n      { qos: 1, retain: true }\r\n    );\r\n    \r\n    console.log(`Comando enviado: alarma/${this.identifier} = ${payload.value}`);\r\n    \r\n    // this.close('alert');\r\n  }\r\n\r\n  close(opt) {\r\n    this.dialogRef.close({\r\n      opt\r\n    });\r\n  }\r\n}","// MEJORADO: Se añade OnDestroy para la limpieza de suscripciones\r\nimport { Component, Inject, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { MapCardComponent } from 'src/app/components/map-card/map-card.component';\r\nimport Swal, { SweetAlertType } from \"sweetalert2\";\r\n// NUEVO: Se importa Subscription para manejar las suscripciones a Observables\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-info-alerts',\r\n  templateUrl: './info-alert.component.html',\r\n  styleUrls: ['./info-alert.component.scss']\r\n})\r\nexport class InfoAlertsComponent implements OnInit, OnDestroy {\r\n  latE: any = null;\r\n  lngE: any = null;\r\n  heightE = '100%';\r\n  idAlert: any;\r\n  user: any;\r\n  form: FormGroup;\r\n  lastPosition: any;\r\n\r\n  // NUEVO: Variables para guardar las suscripciones y poder limpiarlas después\r\n  private positionSubscription: Subscription;\r\n  private mqttSubscription: Subscription;\r\n\r\n  @ViewChild('mapCard') mapCard: MapCardComponent;\r\n  coordinates = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<InfoAlertsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    private _socket: SocketService\r\n  ) {\r\n    this.user = data.user;\r\n    this.idAlert = data.idAlert;\r\n    this.latE = this.user.lat;\r\n    this.lngE = this.user.lng;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getUserPosition(this.user._id);\r\n\r\n    // SOLUCIÓN: Conectar solo el socket principal (ya que ambos eventos vienen por el mismo socket)\r\n    this._socket.socketConnect(this.user._id);\r\n    \r\n    // Empezamos a escuchar los datos en tiempo real\r\n    this.listenForRealtimeData();\r\n  }\r\n\r\n  // MEJORADO: Un solo método para manejar todas las suscripciones de datos en tiempo real\r\n  listenForRealtimeData() {\r\n    // 1. Escuchar actualizaciones de posición\r\n    this.positionSubscription = this._socket.listenForPositions().subscribe((data: any) => {\r\n      console.log(\"RECIBO DATA DE POSICIÓN:\", data);\r\n      if (data && data.positions && data.positions.length > 0) {\r\n        this.coordinates.push({ lat: data.positions[0].lat, lng: data.positions[0].lng });\r\n        if (this.mapCard) {\r\n          this.mapCard.plotRoute(this.coordinates);\r\n        }\r\n      }\r\n    });\r\n\r\n    // 2. Escuchar mensajes MQTT\r\n    this.mqttSubscription = this._socket.listenForMqttMessages().subscribe((data: any) => {\r\n      console.log(\"RECIBO DATA DE MQTT:\", data);\r\n      // Aquí puedes reaccionar a mensajes MQTT específicos\r\n      if (data.topic === `alarma/${this.user.access}` && data.message === 'F') {\r\n        this.showAlert('info', 'Alarma Desactivada', 'El usuario ha desactivado la alarma remotamente.', 'btn btn-info');\r\n      }\r\n    });\r\n  }\r\n\r\n  postComment() {\r\n    startLoading();\r\n    this.api.putAlertHeeded(\r\n      this.idAlert,\r\n      {\r\n        description: this.form.value.comment,\r\n        administrator: this.getUser(),\r\n        replyDate: new Date()\r\n      },\r\n    ).subscribe(_ => {\r\n      finishLoading();\r\n      this.showAlert('success', 'Correcto', 'Alerta atendida correctamente', 'btn btn-info');\r\n\r\n      // Publicar mensaje MQTT para apagar alarma\r\n      const topic = `alarma/${this.user.access}`;\r\n      const message = 'F';\r\n      this._socket.publishMqttMessage(topic, message, { qos: 2, retain: true });\r\n\r\n    }, (_) => {\r\n      finishLoading();\r\n      this.showAlert('error', 'Error', 'Algo ha salido mal, intente más tarde!', 'btn btn-info');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Limpiar suscripciones\r\n    if (this.positionSubscription) {\r\n      this.positionSubscription.unsubscribe();\r\n    }\r\n    if (this.mqttSubscription) {\r\n      this.mqttSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  convertCoordsToAddress() {\r\n    if (this.lastPosition && this.lastPosition.lat && this.lastPosition.lng) {\r\n      this.api.getAddressFromCoords(Number(this.lastPosition.lat), Number(this.lastPosition.lng)).subscribe((resp: any) => {\r\n        this.user['current_position'] = resp.address['road'];\r\n      }, (err: any) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  sendWhatsAppMessage(event: any) {\r\n    event.preventDefault();\r\n    const googleMapsLink = `https://www.google.com/maps/search/?api=1&query=${this.lastPosition.lat},${this.lastPosition.lng}`;\r\n    const message = `Información:\\n\\nNombre: ${this.user.name}\\nCédula: ${this.user.ci}\\nTeléfono: ${this.user.phone}\\nDirección: ${this.user.address}\\nUbicación: ${googleMapsLink}`;\r\n    const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`;\r\n    window.open(whatsappUrl, '_blank');\r\n  }\r\n\r\n  getUserPosition(user) {\r\n    this.api.getUserPosition(user).subscribe((resp: any) => {\r\n      let position = resp.body['position'];\r\n      this.lastPosition = position;\r\n      this.convertCoordsToAddress();\r\n    }, (err: any) => {\r\n      console.log(\"ERR UP: \", err);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      comment: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  close(dialogResult = undefined) {\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  getUser() {\r\n    return localStorage.getItem('id-sh');\r\n  }\r\n\r\n  handleCoordinates(event: { lat: number, lng: number }) {\r\n    console.log('Received coordinates:', event);\r\n  }\r\n\r\n  async showAlert(type: SweetAlertType, title: string, text: string, classBtn: string) {\r\n    return await Swal.fire({\r\n      title,\r\n      text,\r\n      type: type,\r\n      buttonsStyling: false,\r\n      confirmButtonClass: classBtn,\r\n      allowOutsideClick: false\r\n    }).then((data) => {\r\n      if (data.value) {\r\n        if (type !== 'info' && type !== 'warning') {\r\n          this.close('close');\r\n        }\r\n      }\r\n    });\r\n  }\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\n/** OpenLayers Map Imports */\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport { defaults as defaultControls } from 'ol/control.js';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Feature from 'ol/Feature';\r\nimport { Geometry, Point } from 'ol/geom';\r\nimport Style from 'ol/style/Style';\r\nimport Fill from 'ol/style/Fill';\r\nimport Text from 'ol/style/Text';\r\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\r\nimport { URL_SERVICES } from 'src/app/configurations/url.service';\r\nimport Icon from 'ol/style/Icon';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport { InfoAlertsComponent } from './info-alert/info-alert.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\n//import { MqttServiceService } from 'src/app/services/mqtt/mqtt-service.service';\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { NotificationService } from 'src/app/services/notifications.service';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { EventsKey } from 'ol/events';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n\r\n})\r\nexport class MapComponent implements OnInit {\r\n  isLoadingAlerts = false;\r\n\r\n  isConnect = false;\r\n  alerts: any[] = [];\r\n\r\n  map: any;\r\n  markers: any = {};\r\n  source: any;\r\n\r\n  fit = true;\r\n  fitF = true;\r\n  center = false;\r\n  centerMarker: any;\r\n\r\n  markerStyle: any;\r\n  zoomGlobal: any;\r\n\r\n  searchForm: FormGroup;\r\n  word: string = '';\r\n  teams: any[] = [];\r\n  neighborhoods: any[] = [];\r\n\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 500, total: 1 };\r\n  wordToSearch: string = '';\r\n\r\n  dataSelected;\r\n  filteredTeams: Observable<any[]>;\r\n  teamsCtrl = new FormControl();\r\n  teamSelectedId: string;\r\n\r\n  layerRegistry: { [key: string]: VectorLayer<any> } = {};\r\n  isSound: boolean = false;\r\n  isBouncing = false;\r\n\r\n  singleClickListener: EventsKey | null = null;\r\n  private topicMessageCount: { [key: string]: number } = {};\r\n\r\n\r\n  @ViewChild('audioPlayer') audioPlayer: ElementRef;\r\n\r\n  constructor(\r\n    private _api: ApiService,\r\n    public fb: FormBuilder,\r\n    public dialog: MatDialog,\r\n    private notifyService: NotificationService,\r\n    private socketService: SocketService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadOpenStreet();\r\n    this.createForm();\r\n    this.getTeams();\r\n    this.listenMqttMessages();\r\n\r\n    this.map.getView().on('change:resolution', () => {\r\n      const zoomLevel = this.map.getView().getZoom();\r\n      this.updateMarkerStyles(zoomLevel);\r\n    });\r\n  }\r\n\r\n  updateMarkerStyles(zoomLevel: number) {\r\n    for (const markerId in this.markers) {\r\n      if (this.markers.hasOwnProperty(markerId)) {\r\n        const marker = this.markers[markerId];\r\n        const style = marker.getStyle();\r\n\r\n        let textStyle = style.getText();\r\n        if (!textStyle) {\r\n          textStyle = new Text({});\r\n        }\r\n        \r\n        textStyle.setText(marker.get('name'));\r\n        textStyle.setFont(10 + 'px sans-serif'); \r\n        style.setText(textStyle);\r\n  \r\n        marker.setStyle(style);\r\n\r\n        // if (style && style.getText()) {\r\n        //   style.getText().setText(zoomLevel > 15 ? marker.get('name') : '');\r\n        // }\r\n        // marker.setStyle(style);\r\n      }\r\n    }\r\n  }\r\n\r\n listenMqttMessages() {\r\n  // Conecta el socket primero\r\n  this.socketService.socketConnect('map-component');\r\n  \r\n  // Escucha mensajes MQTT a través de Socket.IO\r\n  this.socketService.listenForMqttMessages().subscribe((data: any) => {\r\n    const topic = data.topic;\r\n    const message = data.message;\r\n    const topico = topic.split('/')[1];\r\n\r\n    if (topic.includes('alarma')) {\r\n      console.log('ENTRA EN TOPIC ALARMA:', topic, message);\r\n\r\n      if (message.toString().includes('0')) {\r\n        return;\r\n      }\r\n      \r\n      this.manageAlarms(topico, message);\r\n    }\r\n\r\n    console.log('MENSAJE MQTT RECIBIDO:', topic, message);\r\n\r\n    const central = this.neighborhoods.find((item: any) => item.identifier === topico);\r\n    const alert = message.toString().substring(0, 1);\r\n    const status = message.toString().substring(1, message.toString().length);\r\n    \r\n    if (central) {\r\n      this.typesAlert(central, alert, status);\r\n    }\r\n  });\r\n}\r\n\r\n  manageAlarms(topic: string, message: Buffer) {\r\n    if (!this.topicMessageCount[topic]) {\r\n      this.topicMessageCount[topic] = 0;\r\n    }\r\n\r\n    console.log('SUENA: ', this.topicMessageCount);\r\n\r\n    this.topicMessageCount[topic]++;\r\n    if (this.topicMessageCount[topic] > 1) {\r\n      this.getAlerts();\r\n\r\n      const data: string = message.toString('utf-8');\r\n\r\n      console.log('ESTO 1: ', data);\r\n      if (data.includes('out')) {\r\n        console.log('ENTRA EN OUT');\r\n        const user = JSON.parse(data.split('*')[1]);\r\n        this.notifyService.showError('Fuera de cobertura', `${user.name} - Emitió una alerta`);\r\n        if (!this.markers[user._id]) {\r\n          const marker = new Feature({\r\n            geometry: new Point([parseFloat(user.lng), parseFloat(user.lat)]).transform('EPSG:4326', 'EPSG:3857'),\r\n            name: user.name,\r\n            id: user._id\r\n          });\r\n          this.markers[user._id] = marker;\r\n          // TODO: agregar marcador al mapa\r\n          // Crear el vector source con el nuevo marcador\r\n          // const vectorSource = new VectorSource({\r\n          //   features: [marker]\r\n          // });\r\n          //\r\n          // // Crear el vector layer usando el vector source\r\n          // const vectorLayer = new VectorLayer({\r\n          //   source: vectorSource\r\n          // });\r\n          //\r\n          // // Agregar el vector layer al mapa\r\n          // this.map.addLayer(vectorLayer);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (Number(data) < 10) {\r\n        console.log('ENTRA EN ESTO con IS NUMBER');\r\n        this.changePinColor(topic);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  typesAlert(central: any, alert: string, status: string) {\r\n    // C0 corte de corriente solo batería\r\n    // C1 no hay corte de corriente\r\n    // P1 abierta caja\r\n    // P0 caja cerrada\r\n    // B11.5 estado de la batería\r\n    let mensaje = '';\r\n\r\n    switch (alert) {\r\n      case 'C': //Estado Bateria\r\n        if (status === '0') {\r\n          mensaje = 'Central corte de corriente';\r\n        } else {\r\n          mensaje = 'Revisión estado corriente correcto';\r\n        }\r\n        break;\r\n      case 'D':\r\n        if (status === '0') {\r\n          mensaje = 'Central fuera de línea';\r\n          this.setMarkerStyle(this.markers[central.identifier], 'pin-disconnect');\r\n        } else {\r\n          mensaje = 'Central central en línea';\r\n          this.setMarkerStyle(this.markers[central.identifier], 'pin');\r\n        }\r\n        break;\r\n      case 'P': //Estado Caja\r\n        if (status === '0') {\r\n          mensaje = 'Puerta central abierta';\r\n        } else {\r\n          mensaje = 'Puerta central cerrada';\r\n        }\r\n        break;\r\n      case 'B': //Estado bateria\r\n        mensaje = `Estado de la bateria ${status}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.fb.group({\r\n      value: [this.teams[0]]\r\n    });\r\n  }\r\n\r\n  centerMap() {\r\n    const coordinates = this.neighborhoods.map(point => [parseFloat(point.lng), parseFloat(point.lat)]);\r\n\r\n    // Calcular el centro de todas las coordenadas\r\n    const center = coordinates.reduce(\r\n      (accumulator, current) => [accumulator[0] + current[0], accumulator[1] + current[1]],\r\n      [0, 0]\r\n    );\r\n    center[0] /= coordinates.length;\r\n    center[1] /= coordinates.length;\r\n\r\n    // Configurar la vista del mapa para centrarse en el punto calculado\r\n    this.map.getView().setCenter(fromLonLat(center));\r\n    const zoom = this.calculateZoomForPoints(this.neighborhoods);\r\n    this.map.getView().setZoom(zoom);\r\n  }\r\n\r\n clearMapState() {\r\n  this.markers = {};\r\n  this.topicMessageCount = {};\r\n  \r\n  // Ya no necesitas desuscribirte de temas MQTT directamente\r\n  // porque eso lo maneja el backend\r\n  \r\n  // Remover todas las capas del mapa\r\n  for (const layerId in this.layerRegistry) {\r\n    if (this.layerRegistry.hasOwnProperty(layerId)) {\r\n      this.map.removeLayer(this.layerRegistry[layerId]);\r\n    }\r\n  }\r\n\r\n  this.layerRegistry = {};\r\n  this.neighborhoods = [];\r\n\r\n  if (this.singleClickListener) {\r\n    unByKey(this.singleClickListener);\r\n    this.singleClickListener = null;\r\n  }\r\n}\r\n\r\n  setMarker(incomingMarker: any, neighborhood: any) {\r\n    if (!incomingMarker) {\r\n      const marker = new Feature({\r\n        geometry: new Point([parseFloat(neighborhood.lng), parseFloat(neighborhood.lat)]).transform('EPSG:4326', 'EPSG:3857'),\r\n        name: neighborhood.name,\r\n        connected: neighborhood.connected,\r\n        identifier: neighborhood.identifier\r\n      });\r\n      this.markers[neighborhood.identifier] = marker;\r\n      this.setMarkerStyle(marker, neighborhood.connected ? 'pin' : 'pin-disconnect');\r\n    } else {\r\n      incomingMarker.set('connected', neighborhood.connected);\r\n      this.setMarkerStyle(incomingMarker, neighborhood.connected ? 'pin' : 'pin-disconnect');\r\n    }\r\n  }\r\n\r\n  setMarkerStyle(marker: Feature<Geometry>, iconType: string) {\r\n    const text = new Text({\r\n      // text: marker.get('name'),\r\n      text: '',\r\n      offsetY: 12,\r\n      fill: new Fill({ color: 'black' }),\r\n      font: 'bold 14px Arial',\r\n      backgroundFill: new Fill({ color: 'white' }),\r\n      padding: [3, 3, 3, 3]\r\n    });\r\n\r\n    this.markerStyle = new Style({\r\n      image: new Icon({\r\n        crossOrigin: 'anonymous',\r\n        anchor: [24, 48],\r\n        anchorXUnits: IconAnchorUnits.PIXELS,\r\n        anchorYUnits: IconAnchorUnits.PIXELS,\r\n        src: `${URL_SERVICES}/view/${iconType}`\r\n      }),\r\n      text\r\n    });\r\n\r\n    let textStyle = this.markerStyle.getText();\r\n\r\n    if (!textStyle) {\r\n      textStyle = new Text({});\r\n    }\r\n    \r\n    textStyle.setText(marker.get('name'));\r\n    textStyle.setFont(10 + 'px sans-serif'); \r\n    this.markerStyle.setText(textStyle);\r\n\r\n    // const zoomLevel = this.map.getView().getZoom();\r\n    // if (zoomLevel < 16) {\r\n    //   this.markerStyle.setText(null);\r\n    // }\r\n\r\n    marker.setStyle(this.markerStyle);\r\n  }\r\n\r\n\r\ngetNeighborhoodByTeam(teamSelected: string) {\r\n  this.clearMapState();\r\n  this._api.getNeighborhoodByTeam(\r\n    teamSelected,\r\n    this.pagination.page,\r\n    this.pagination.itemsPage,\r\n    this.wordToSearch,\r\n  ).subscribe(resp => {\r\n    this.neighborhoods = resp.body['neighborhoods'];\r\n    this.centerMap();\r\n\r\n    this.neighborhoods.forEach((neighborhood) => {\r\n      // En lugar de suscribirte directamente a MQTT, envía una petición al backend\r\n      // para que él se suscriba y te reenvíe los mensajes via Socket.IO\r\n      console.log('Monitoring neighborhood:', neighborhood.identifier);\r\n      \r\n      this.setMarker(this.markers[neighborhood.identifier], neighborhood);\r\n      const vectorSource = new VectorSource({\r\n        features: [this.markers[neighborhood.identifier]]\r\n      });\r\n      const vectorLayer = new VectorLayer({\r\n        source: vectorSource\r\n      });\r\n      vectorLayer.set('layerId', neighborhood._id);\r\n      \r\n      this.layerRegistry[neighborhood._id] = vectorLayer;\r\n      this.map.addLayer(vectorLayer);\r\n    });\r\n\r\n    // ---> INICIO: CÓDIGO AÑADIDO PARA INTEGRAR ACTIONSCOMPONENT <---\r\n    // 🗺️ Primero, nos aseguramos de limpiar cualquier listener anterior para evitar duplicados.\r\n    if (this.singleClickListener) {\r\n      unByKey(this.singleClickListener);\r\n    }\r\n\r\n    // Creamos el nuevo listener para el evento 'singleclick'\r\n    this.singleClickListener = this.map.on('singleclick', (evt: any) => {\r\n      this.map.forEachFeatureAtPixel(evt.pixel, (feature: any, _: any) => {\r\n        // Si se hizo clic sobre un marcador (feature)\r\n        if (feature) {\r\n          const name = feature.get('name');\r\n          const connected = feature.get('connected');\r\n          const identifier = feature.get('identifier');\r\n          \r\n          // Abrimos el diálogo del ActionsComponent con los datos del marcador\r\n          this.dialog.open(ActionsComponent, {\r\n            width: '60%',\r\n            data: { name, connected, identifier }\r\n          });\r\n        }\r\n      });\r\n    });\r\n    // ---> FIN: CÓDIGO AÑADIDO <---\r\n\r\n  }); // Cierre de la suscripción de _api.getNeighborhoodByTeam\r\n}\r\n\r\n  calculateZoomForPoints(points) {\r\n    if (points.length === 0) {\r\n      return 2; // Valor predeterminado si no hay puntos\r\n    }\r\n\r\n    // Obtener las coordenadas extremas (mínima y máxima) de los puntos\r\n    const minX = Math.min(...points.map(point => parseFloat(point.lng)));\r\n    const minY = Math.min(...points.map(point => parseFloat(point.lat)));\r\n    const maxX = Math.max(...points.map(point => parseFloat(point.lng)));\r\n    const maxY = Math.max(...points.map(point => parseFloat(point.lat)));\r\n\r\n    // Calcular el centro y el ancho/alto de la extensión geográfica\r\n    const centerX = (minX + maxX) / 2;\r\n    const centerY = (minY + maxY) / 2;\r\n    const extentWidth = maxX - minX;\r\n    const extentHeight = maxY - minY;\r\n\r\n    // Obtener el tamaño del contenedor del mapa\r\n    const mapContainer = document.getElementById('map'); // Ajusta el ID según tu estructura HTML\r\n    const containerWidth = mapContainer.clientWidth;\r\n    const containerHeight = mapContainer.clientHeight;\r\n\r\n    // Calcular el zoom necesario para que la extensión geográfica sea completamente visible\r\n    const resolutionX = extentWidth / containerWidth;\r\n    const resolutionY = extentHeight / containerHeight;\r\n    const resolution = Math.max(resolutionX, resolutionY);\r\n\r\n    // Calcular el zoom basado en la resolución y el tamaño del contenedor\r\n    const zoom = Math.log2(360 / (resolution * 256)) - 1;\r\n\r\n    return zoom;\r\n  }\r\n\r\n  loadOpenStreet() {\r\n    this.map = new Map({\r\n      controls: defaultControls({\r\n        zoom: false,\r\n        rotate: false,\r\n      }),\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new XYZ({\r\n            // url: 'https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga'\r\n            url: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          })\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: [0, 0],\r\n        zoom: 2,\r\n        maxZoom: 19,\r\n        minZoom: 2\r\n      })\r\n    });\r\n  }\r\n\r\n  getTeams() {\r\n    this._api.getTeams(this.pagination.page, this.pagination.itemsPage, this.wordToSearch).subscribe(resp => {\r\n      this.teams = resp.body.teams;\r\n      if (this.teams.length > 0) {\r\n        this.searchForm.patchValue({ value: this.teams[0]._id });\r\n        this.selected(this.searchForm.value.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cuando se cambia el dropdown de teams se pasa como parametro el team y se ejecuta esto.\r\n  selected(teamId: string) {\r\n    this.markers = {};\r\n    this.neighborhoods = [];\r\n    this.getNeighborhoodByTeam(teamId);\r\n    this.teamSelectedId = teamId;\r\n    this.alerts = [];\r\n    this.getAlerts();\r\n  }\r\n\r\n  getAlerts() {\r\n    this.isLoadingAlerts = true;\r\n    this._api.getAlertsByTeam(this.teamSelectedId).subscribe((resp: any) => {\r\n      this.alerts = resp.body.alerts;\r\n      this.isLoadingAlerts = false;\r\n    }, (err: any) => {\r\n      showAlert(\r\n        'error',\r\n        'Error',\r\n        `Algo ha salido mal, intente más tarde!\\n${err}`,\r\n        'btn btn-info',\r\n      );\r\n    })\r\n  }\r\n\r\n  changePinColor(identifier: string) {\r\n    if (!identifier || !this.markers[identifier]) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < 20; i++) {\r\n      setTimeout(() => {\r\n        if (i === 19) {\r\n          this.setMarkerStyle(this.markers[identifier], 'pin');\r\n          this.stopSound();\r\n        }\r\n\r\n        if (i % 2 === 0) {\r\n          this.setMarkerStyle(this.markers[identifier], 'pin4');\r\n        } else {\r\n          this.setMarkerStyle(this.markers[identifier], this.markers[identifier].get('connected') ? 'pin' : 'pin-disconnect');\r\n        }\r\n      }, i * 500);\r\n    }\r\n\r\n\r\n    if (!this.isSound) {\r\n      this.playSound();\r\n    }\r\n\r\n  }\r\n\r\n  getTypeAlert(alert) {\r\n    let notificationMessage;\r\n    let imgAlert;\r\n    let imgDefault = 'assets/img/icons/shadow.png';\r\n\r\n    switch (alert) {\r\n      case 'ALERT_1':\r\n        notificationMessage = 'ALERTA DE SOS';\r\n        imgAlert = 'assets/img/alerts/policebtn.png';\r\n\r\n        break;\r\n      case 'ALERT_2':\r\n        notificationMessage = 'ALERTA DE SOSPECHOSO';\r\n        imgAlert = 'assets/img/alerts/suspect.png';\r\n\r\n        break;\r\n      case 'ALERT_3':\r\n        notificationMessage = 'ALERTA SILENCIOSA';\r\n        imgAlert = 'assets/img/alerts/silencio.png';\r\n\r\n        break;\r\n      case 'ALERT_4':\r\n        notificationMessage = 'ALERTA DE MI UBICACIÓN';\r\n        imgAlert = imgDefault;\r\n\r\n        break;\r\n      case 'ALERT_5':\r\n        notificationMessage = 'ALERTA DE VIOLENCIA DE GÉNERO';\r\n        imgAlert = 'assets/img/alerts/genero.png';\r\n\r\n        break;\r\n      case 'ALERT_6':\r\n        notificationMessage = 'ALERTA DE INUNDACIÓN';\r\n        imgAlert = 'assets/img/alerts/flood.png';\r\n\r\n        break;\r\n      case 'ALERT_7':\r\n        notificationMessage = 'ALERTA DE TERREMOTO';\r\n        imgAlert = 'assets/img/alerts/earthquake.png';\r\n\r\n        break;\r\n\r\n      case 'ALERT_10':\r\n        notificationMessage = 'ALERTA DISUASIVA';\r\n        imgAlert = imgDefault;\r\n        break;\r\n\r\n      case 'ALERT_11':\r\n        notificationMessage = 'ALERTA DE LIBADORES';\r\n        imgAlert = imgDefault;\r\n        break;\r\n\r\n      case 'ALERT_12':\r\n        notificationMessage = 'ALERTA DE EXTORSIONADOR';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_13':\r\n        notificationMessage = 'ALERTA P0';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_14':\r\n        notificationMessage = 'ALERTA P1';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_15':\r\n        notificationMessage = 'ALERTA P2';\r\n        imgAlert = imgDefault;\r\n        break;\r\n    }\r\n\r\n    return {\r\n      type: notificationMessage,\r\n      img: imgAlert\r\n    };\r\n  }\r\n\r\n  playSound() {\r\n    this.isSound === true;\r\n    const audio: HTMLAudioElement = this.audioPlayer.nativeElement;\r\n    audio.play();\r\n  }\r\n\r\n  stopSound() {\r\n    this.isSound === false;\r\n    const audio: HTMLAudioElement = this.audioPlayer.nativeElement;\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n  }\r\n\r\n  showAlertInfo(data: any) {\r\n    const modal = this.dialog.open(InfoAlertsComponent, {\r\n      width: '60%',\r\n      data: {\r\n        user: data.user,\r\n        idAlert: data._id\r\n      }\r\n    });\r\n\r\n    modal.afterClosed().subscribe(infoData => {\r\n      if (infoData === undefined) {\r\n        return;\r\n      }\r\n\r\n      this.alerts = [];\r\n      this.getAlerts();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { Event } from 'typescript.events';\r\nimport { MapComponent } from './map.component';\r\nimport { MapRoutes } from './map.routes';\r\nimport { InfoAlertsComponent } from './info-alert/info-alert.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MapComponent,\r\n    InfoAlertsComponent,\r\n    ActionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n    }),\r\n    RouterModule.forChild(MapRoutes),\r\n    MaterialModule,\r\n    ComponentsModule,\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class MapModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { MapComponent } from './map.component';\r\n\r\n\r\nexport const MapRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: MapComponent\r\n        }]\r\n    }\r\n];","import { Injectable } from '@angular/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(private toastr: ToastrService) { }\r\n\r\n  showSuccess(message, title) {\r\n    this.toastr.success(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showError(message, title) {\r\n    this.toastr.error(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showInfo(message, title) {\r\n    this.toastr.info(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showWarning(message, title) {\r\n    this.toastr.warning(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n}\r\n","// En src/app/services/socket.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { URL_SOCKET } from '../configurations/url.service';\r\nimport { ApiService } from './api.service';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n  socket: Socket;\r\n  socketPosition: Socket;\r\n\r\n  private mqttMessageSource = new Subject<any>();\r\n  private positionSource = new Subject<any>();\r\n\r\n  constructor(\r\n    private _api: ApiService\r\n  ) { }\r\n\r\n  /**\r\n   * Conecta el socket principal para eventos generales y MQTT.\r\n   * Lo ideal es llamar a esta función una vez que el usuario ha iniciado sesión.\r\n   * @param id Un identificador único, como el ID del usuario.\r\n   */\r\n  socketConnect(id: any) {\r\n    let user = this._api.getUser();\r\n    if (this.socket && this.socket.connected) {\r\n      return;\r\n    }\r\n\r\n    // QUITAR EL NAMESPACE '/angular' - conectar al root\r\n    this.socket = io(`${URL_SOCKET}`, {  // <-- Cambio aquí\r\n      query: { id, user },\r\n    });\r\n\r\n    // Escucha el evento 'mqttMessage' del backend y lo emite a través del Observable\r\n    this.socket.on('mqttMessage', (data) => {\r\n      console.log('Mensaje MQTT recibido en frontend:', data);\r\n      this.mqttMessageSource.next(data);\r\n    });\r\n\r\n    // Agregar listeners para depuración\r\n    this.socket.on('connect', () => {\r\n      console.log('Conectado al servidor Socket.IO');\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Desconectado del servidor Socket.IO');\r\n    });\r\n\r\n    this.socket.on('error', (error) => {\r\n      console.error('Error en Socket.IO:', error);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Conecta el socket secundario, específico para posiciones.\r\n   * @param id Un identificador único, como el ID del usuario o del seguimiento.\r\n   */\r\n  socketPositionConnect(id: any) {\r\n    if (this.socketPosition && this.socketPosition.connected) {\r\n        return;\r\n    }\r\n    \r\n    // QUITAR EL NAMESPACE '/positions' - conectar al root\r\n    this.socketPosition = io(`${URL_SOCKET}`, {  // <-- Cambio aquí\r\n      query: { id },\r\n    });\r\n\r\n    // Escucha el evento 'user-position' y lo emite a través del Observable\r\n    this.socketPosition.on('user-position', (data: any) => {\r\n        this.positionSource.next(data);\r\n    });\r\n  }\r\n\r\n  // --- MÉTODOS PÚBLICOS PARA USAR EN LOS COMPONENTES ---\r\n\r\n  /**\r\n   * Permite a los componentes suscribirse para recibir mensajes MQTT en tiempo real.\r\n   */\r\n  public listenForMqttMessages(): Observable<any> {\r\n    return this.mqttMessageSource.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Permite a los componentes suscribirse para recibir actualizaciones de posición en tiempo real.\r\n   */\r\n  public listenForPositions(): Observable<any> {\r\n    return this.positionSource.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Permite a los componentes enviar una petición al backend para publicar un mensaje MQTT.\r\n   * @param topic El tópico MQTT al que se publicará.\r\n   * @param message El mensaje que se enviará.\r\n   * @param options Opciones adicionales de MQTT (ej: { qos: 2, retain: true }).\r\n   */\r\n  public publishMqttMessage(topic: string, message: string, options?: any) {\r\n    if (this.socket) {\r\n        console.log('Enviando mensaje MQTT:', { topic, message });\r\n        this.socket.emit('publishToMqtt', { topic, message, options });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método genérico para emitir cualquier otro evento al socket principal.\r\n   * @param eventName Nombre del evento.\r\n   * @param data Datos a enviar.\r\n   */\r\n  public emitEvent(eventName: string, data: any) {\r\n    if (this.socket) {\r\n        this.socket.emit(eventName, data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Desconectar sockets\r\n   */\r\n  public disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n    if (this.socketPosition) {\r\n      this.socketPosition.disconnect();\r\n    }\r\n  }\r\n}","export default \"<h2 mat-dialog-title class=\\\"mat-typography\\\">{{name}}</h2>\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"status-container\\\">\\r\\n    <div *ngIf=\\\"connected == null || connected == ''\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"connected == '1'\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">wifi</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>En línea</div>\\r\\n        <div>{{ connectedTimeAgo }}</div>\\r\\n        <div>{{ connectedAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"connected != '1' && connected != null && connected != ''\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">wifi</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Fuera de línea</div>\\r\\n        <div>{{ connectedTimeAgo }}</div>\\r\\n        <div>{{ connectedAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"powerOutage == null || powerOutage == ''\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"powerOutage == '1'\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">power</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Revisión conectado</div>\\r\\n        <div>{{ powerOutageTimeAgo }}</div>\\r\\n        <div>{{ powerOutageAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"powerOutage != '1' && powerOutage != null && powerOutage != ''\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">power</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Revisión desconectado</div>\\r\\n        <div>{{ powerOutageTimeAgo }}</div>\\r\\n        <div>{{ powerOutageAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus == null\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus <= threshold && batteryStatus != null\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">battery_alert</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>{{ batteryStatus }}V</div>\\r\\n        <div>{{ batteryStatusTimeAgo }}</div>\\r\\n        <div>{{ batteryStatusAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus > threshold && batteryStatus != null\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">battery_alert</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>{{ batteryStatus }}V</div>\\r\\n        <div>{{ batteryStatusTimeAgo }}</div>\\r\\n        <div>{{ batteryStatusAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"grid-container\\\">\\r\\n    <div class=\\\"grid-item\\\" *ngFor=\\\"let alert of alerts\\\">\\r\\n      <button mat-button class=\\\"custom-mat-button\\\" (click)=\\\"sendCommand(alert)\\\">{{ alert.text }}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"center-button-container\\\">\\r\\n    <button mat-button class=\\\"custom-mat-button-red\\\" (click)=\\\"sendCommand({'value': '0'})\\\">Apagar</button>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n<div tabindex=\\\"-1\\\" cdkFocusInitial></div>\\r\\n\";","export default \"<!-- <div class=\\\"modal-header1 text-left row mb-1\\\"> -->\\r\\n<!--     <h6 class=\\\"modal-title\\\">Información alerta</h6> -->\\r\\n<!--     <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\"> -->\\r\\n<!--         <i class=\\\"fa fa-times icon-modal-close\\\"></i> -->\\r\\n<!--     </button> -->\\r\\n<!-- </div> -->\\r\\n<!--  -->\\r\\n<!-- <mat-dialog-content class=\\\"mat-typography\\\"> -->\\r\\n<!--     <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\"> -->\\r\\n<!--         <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"> -->\\r\\n<!--             <div class=\\\"row\\\"> -->\\r\\n<!--                 <div class=\\\"col-xs-4 col-sm-4 col-md-4 col-lg-4\\\" > -->\\r\\n<!--                  -->\\r\\n<!--                     <strong>Usuario</strong><br> -->\\r\\n<!--                     <p> -->\\r\\n<!--                         <small>Nombre: <strong>{{ user.name }}</strong></small><br> -->\\r\\n<!--                         <small>Cédula: <strong>{{ user.ci }}</strong></small><br> -->\\r\\n<!--                         <small>Teléfono: <strong>{{ user.phone }}</strong></small><br> -->\\r\\n<!--                         <small>Dirección: <strong>{{ user.address }}</strong></small><br> -->\\r\\n<!--                     </p> -->\\r\\n<!--                 </div> -->\\r\\n<!--                 <div class=\\\"col-xs-8 col-sm-8 col-md-8 col-lg-8\\\" style=\\\"height: 55vh;\\\" > -->\\r\\n<!--                     <app-map-card [lat]=\\\"latE\\\" [lng]=\\\"lngE\\\" [heightE]=\\\"heightE\\\" #mapCard></app-map-card> -->\\r\\n<!--                 </div> -->\\r\\n<!--             </div> -->\\r\\n<!--  -->\\r\\n<!--         </div> -->\\r\\n<!--          -->\\r\\n<!--         <div class=\\\"row\\\"> -->\\r\\n<!--             <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" > -->\\r\\n<!--                 <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\"> -->\\r\\n<!--                     <mat-label>Motivo de alerta</mat-label> -->\\r\\n<!--                     <input matInput name=\\\"comment\\\" formControlName=\\\"comment\\\"> -->\\r\\n<!--                 </mat-form-field> -->\\r\\n<!--             </div> -->\\r\\n<!--  -->\\r\\n<!--         </div> -->\\r\\n<!--     </form> -->\\r\\n<!-- </mat-dialog-content> -->\\r\\n<!--  -->\\r\\n<!-- <div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\"> -->\\r\\n<!--     <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"postComment()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\"> -->\\r\\n<!--         Guardar  -->\\r\\n<!--     </button> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n  <h6 class=\\\"modal-title\\\">Información alerta</h6>\\r\\n  <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n    <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"map-container\\\">\\r\\n            <app-map-card [lat]=\\\"latE\\\" [lng]=\\\"lngE\\\" [heightE]=\\\"heightE\\\" #mapCard></app-map-card>\\r\\n            <div class=\\\"info-card\\\">\\r\\n              <strong>Usuario</strong><br>\\r\\n              <p>\\r\\n                <small>Nombre: <strong>{{ user.name }}</strong></small><br>\\r\\n                <small>Cédula: <strong>{{ user.ci }}</strong></small><br>\\r\\n                <small>Teléfono: <strong>{{ user.phone }}</strong></small><br>\\r\\n                <small>Dirección: <strong>{{ user.address }}</strong></small><br>\\r\\n                <small>Dirección Actual: <strong>{{ user.current_position }}</strong></small><br>\\r\\n                <a href=\\\"#\\\" (click)=\\\"sendWhatsAppMessage($event)\\\">\\r\\n                  <i class=\\\"fab fa-whatsapp\\\"></i> Compartir\\r\\n                </a>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n          <mat-label>Motivo de alerta</mat-label>\\r\\n          <input matInput name=\\\"comment\\\" formControlName=\\\"comment\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n  <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"postComment()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\" >\\r\\n                        <strong class=\\\"h4 title\\\">SALA DE MONITOREO</strong>\\r\\n                            <mat-icon title=\\\"Centrar\\\" style=\\\"float: right; cursor: pointer;\\\" (click)=\\\"centerMap()\\\">center_focus_strong</mat-icon>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <form [formGroup]=\\\"searchForm\\\" class=\\\"form-horizontal\\\">\\r\\n                            <div id=\\\"map\\\" class=\\\"map\\\">\\r\\n                                <mat-form-field class=\\\"col-xs-3 col-sm-3 col-md-3 custom-input\\\"  appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n                                    <mat-label> Teams</mat-label>\\r\\n                                    <mat-select name=\\\"value\\\" formControlName=\\\"value\\\" (selectionChange)=\\\"selected($event.value)\\\">\\r\\n                                      <mat-option *ngFor=\\\"let item of teams\\\" [value]=\\\"item._id\\\">\\r\\n                                        TEAM - {{ item.name }}\\r\\n                                      </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n\\r\\n                                <div id=\\\"card-alert\\\" class=\\\"card\\\">\\r\\n                                  <div class=\\\"card-header\\\">\\r\\n                                    <h5 class=\\\"h6 mb-0 text-center\\\" style=\\\"font-weight: bold;\\\">\\r\\n                                      Alertas Pendientes\\r\\n                                      <i *ngIf=\\\"isLoadingAlerts\\\" class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                                    </h5>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"card-body\\\" >\\r\\n                                    <div\\r\\n                                      class=\\\"timeline timeline-one-side\\\"\\r\\n                                      data-timeline-axis-style=\\\"dashed\\\"\\r\\n                                      data-timeline-content=\\\"axis\\\"\\r\\n                                    >\\r\\n                                      <div class=\\\"timeline-block\\\" *ngFor=\\\"let item of alerts\\\" style=\\\"margin-top: -2vh !important;\\\">\\r\\n                                        <span class=\\\"timeline-step badge-warning\\\" style=\\\"cursor: pointer;\\\" title=\\\"Ver más\\\" (click)=\\\"showAlertInfo(item)\\\">\\r\\n                                          <mat-icon>notifications_active</mat-icon>\\r\\n                                          <!-- <img src=\\\"{{ getTypeAlert(item.type).img }}\\\" style=\\\"height: 4vh; width: 4vh;\\\" alt=\\\"\\\"> -->\\r\\n                                        </span>\\r\\n              \\r\\n                                        <div class=\\\"timeline-content\\\">\\r\\n                                          <div class=\\\"d-flex justify-content-between\\\">\\r\\n                                            <div>\\r\\n                                              <span class=\\\"text-sm font-weight-bold\\\">\\r\\n                                                {{ getTypeAlert(item.type).type }} - \\r\\n                                                {{ item.access.name }}\\r\\n                                              </span>\\r\\n                                              <br>\\r\\n                                              <small style=\\\"font-weight: 500;\\\">{{ item.user.name }}</small>\\r\\n                                              <!-- <small style=\\\"font-weight: 500;\\\">{{ getTypeAlert(item.type).type }}</small> -->\\r\\n                                            </div>\\r\\n                          \\r\\n                                            <div class=\\\"text-right\\\">\\r\\n                                              <small class=\\\"text-muted\\\">\\r\\n                                                <i class=\\\"fas fa-clock mr-1\\\"> </i> \\r\\n                                                {{ item.date | date:'HH:mm' }}\\r\\n                                              </small>\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                          \\r\\n                                         \\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                          \\r\\n                                    </div>\\r\\n                                  </div>\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                    </div>  \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                      <h6 class=\\\"h2 mb-0\\\">Alertas</h6>\\r\\n                    </div>\\r\\n      \\r\\n                    <div class=\\\"card-body\\\" id=\\\"card-alert\\\">\\r\\n                      <div\\r\\n                        class=\\\"timeline timeline-one-side\\\"\\r\\n                        data-timeline-axis-style=\\\"dashed\\\"\\r\\n                        data-timeline-content=\\\"axis\\\"\\r\\n                      >\\r\\n                        <div class=\\\"timeline-block\\\" *ngFor=\\\"let item of alerts\\\">\\r\\n                          <span class=\\\"timeline-step badge-success\\\" style=\\\"cursor: pointer;\\\" title=\\\"Ver más\\\" (click)=\\\"showAlertInfo(item)\\\">\\r\\n                            <img src=\\\"{{ getTypeAlert(item.type).img }}\\\" style=\\\"height: 4vh; width: 4vh;\\\" alt=\\\"\\\">\\r\\n                          </span>\\r\\n\\r\\n                          <div class=\\\"timeline-content\\\">\\r\\n                            <div class=\\\" d-flex justify-content-between pt-1\\\">\\r\\n                              <div>\\r\\n                                <span class=\\\" text-muted text-sm font-weight-bold\\\">\\r\\n                                  {{ item.access.name }}\\r\\n                                </span>\\r\\n                              </div>\\r\\n            \\r\\n                              <div class=\\\"text-right\\\">\\r\\n                                <small class=\\\"text-muted\\\">\\r\\n                                  <i class=\\\"fas fa-clock mr-1\\\"> </i> \\r\\n                                  {{ item.date | date:'HH:mm' }}\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n            \\r\\n                            <p class=\\\" text-sm mt-1 mb-0\\\">\\r\\n                              <strong>{{ item.user.name }}</strong><br>\\r\\n                              <small>{{ getTypeAlert(item.type).type }}</small>\\r\\n                            </p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n            \\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div> -->\\r\\n        </div>\\r\\n\\r\\n        <audio #audioPlayer>\\r\\n          <source src=\\\"assets/notification.mp3\\\" type=\\\"audio/mp3\\\">\\r\\n          Tu navegador no soporta la reproducción de audio.\\r\\n        </audio>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <caption>\\r\\n  <button id=\\\"addBtn\\\" class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n      <i  class=\\\"fa fa-chevron-up\\\"></i>\\r\\n  </button>\\r\\n</caption> -->\\r\\n\";","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n"],"names":["Component","Inject","ViewChild","FormBuilder","Validators","MAT_DIALOG_DATA","MatDialog","MatDialogRef","finishLoading","startLoading","ApiService","SocketService","Swal","InfoAlertsComponent","constructor","dialogRef","dialog","data","fb","api","_socket","user","idAlert","latE","lat","lngE","lng","ngOnInit","createForm","getUserPosition","_id","socketConnect","listenForRealtimeData","positionSubscription","listenForPositions","subscribe","console","log","positions","length","coordinates","push","mapCard","plotRoute","mqttSubscription","listenForMqttMessages","topic","access","message","showAlert","postComment","putAlertHeeded","description","form","value","comment","administrator","getUser","replyDate","Date","_","publishMqttMessage","qos","retain","ngOnDestroy","unsubscribe","convertCoordsToAddress","lastPosition","getAddressFromCoords","Number","resp","address","err","sendWhatsAppMessage","event","preventDefault","googleMapsLink","name","ci","phone","whatsappUrl","encodeURIComponent","window","open","position","body","group","required","close","dialogResult","undefined","localStorage","getItem","handleCoordinates","type","title","text","classBtn","fire","buttonsStyling","confirmButtonClass","allowOutsideClick","then","args","selector","template"],"sourceRoot":"webpack:///"}