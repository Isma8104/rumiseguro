{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAaaA,sBAAqB;AAIhC,uCACSC,SADT,EAESC,MAFT,EAGkCC,IAHlC,EAIUC,EAJV,EAKSC,GALT,EAMSC,MANT,EAMsB;AAAA;;AALb;AACA;AACyB;AACxB;AACD;AACA;AATT,uBAAQ,EAAR;AAWEL,mBAAS,CAACM,YAAV,GAAyB,IAAzB;AACD;;AAb+B;AAAA;AAAA,iBAehC,iBAAQ;AACN,iBAAKC,UAAL;AACD;AAjB+B;AAAA;AAAA,iBAmBhC,mBAAU;AACR,iBAAKC,IAAL,GAAY,KAAKL,EAAL,CAAQM,KAAR,CAAc;AACxBC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAACC,+DAAD,CAAL;AADc,aAAd,CAAZ;AAGD;AAvB+B;AAAA;AAAA,iBA0BhC,qBAAY;AAAA;;AACV,iBAAKP,GAAL,CAASQ,YAAT,CAAsB,KAAKJ,IAAL,CAAUK,KAAV,CAAgBH,QAAtC,EAAgDI,SAAhD,CAA0D,cAAI,EAAI;AAC9D,mFAAU,SAAV,EAAqB,UAArB,EAAiC,6BAAjC,EAAgE,uBAAhE,EAAyFC,IAAzF,CAA8F,UAACC,MAAD,EAAgB;AAC1G,qBAAI,CAACC,KAAL;AACH,eAFD;AAGH,aAJD,EAIG,UAACC,GAAD,EAAQ;AACP,mFAAU,OAAV,EAAmB,OAAnB,EAA4B,wCAA5B,EAAsE,cAAtE;AACH,aAND;AAOD;AAlC+B;AAAA;AAAA,eAoChC,eAAc;AAAK,mBAAO,KAAKV,IAAL,CAAUW,QAAjB;AAA4B;AApCf;AAAA;AAAA,iBAuChC,cAAK;AACH,iBAAKnB,SAAL,CAAeiB,KAAf;AACD;AAzC+B;AAAA;;;;gBAXGG;;gBAAXA;;;;kBAkBrBC;AAAMC,mBAACF,qEAAD;;;gBAnBFT;;gBAGAY;;gBAEAC;;;;AAOIzB,4BAAqB,uDALjC,0DAAU;AACT0B,gBAAQ,EAAE,kBADD;AAETC,gNAFS;;AAAA,OAAV,CAKiC,GAArB3B,sBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCA4B,cAAa;AAOxB,+BACUC,IADV,EAES3B,MAFT,EAE0B;AAAA;;AADhB;AACD;AART,sBAAc,EAAd;AAEA,4BAA0B;AAAE4B,gBAAI,EAAE,CAAR;AAAWC,iBAAK,EAAE,CAAlB;AAAqBC,qBAAS,EAAE,EAAhC;AAAoCC,iBAAK,EAAE;AAA3C,WAA1B;AACA,8BAAuB,EAAvB;AACA,uBAAgB,CAAhB;AAKK;;AAVmB;AAAA;AAAA,iBAYxB,iBAAQ;AACN,iBAAKC,OAAL;AACD;AAduB;AAAA;AAAA,iBAgBxB,gBAAO;AAAA;;AACL,iBAAKL,IAAL,CAAUK,OAAV,CAAkB,KAAKC,UAAL,CAAgBL,IAAlC,EAAwC,KAAKK,UAAL,CAAgBH,SAAxD,EAAmEjB,SAAnE,CAA6E;AAC3EqB,kBAAI,EAAE,SAANA,IAAM,CAACC,IAAD,EAAc;AAClB,sBAAI,CAACC,IAAL,GAAYD,IAAI,CAACE,IAAL,CAAUD,IAAtB;AACA,sBAAI,CAACH,UAAL,GAAkBE,IAAI,CAACE,IAAL,CAAUJ,UAA5B;AACA,sBAAI,CAACK,KAAL,GAAaH,IAAI,CAACE,IAAL,CAAUJ,UAAV,CAAqBF,KAAlC;AACD,eAL0E;AAM3EQ,mBAAK,EAAE,SAAPA,KAAO,CAACtB,GAAD,EAAQ;AACb,qFAAU,OAAV,EAAmB,OAAnB,EAA4B,wCAA5B,EAAsE,cAAtE;AACD;AAR0E,aAA7E;AAUD;AA3BuB;AAAA;AAAA,iBA6BxB,kBAAS;AAAA;;AACP,gBAAMuB,SAAS,GAAG,KAAKxC,MAAL,CAAYyC,IAAZ,CAAiBC,uFAAjB,EAAwC;AACxDC,mBAAK,EAAE;AADiD,aAAxC,CAAlB;AAIAH,qBAAS,CAACI,WAAV,GAAwB/B,SAAxB,CAAkC,gBAAM,EAAG;AACzC,oBAAI,CAACmB,OAAL;AACD,aAFD;AAGD;AArCuB;AAAA;AAAA,iBAuCxB,mBAAU,CAACa,SAAD,EAAqB;AAC7B,iBAAKZ,UAAL,CAAgBL,IAAhB,GAAuBiB,SAAS,CAACC,SAAV,GAAsB,CAA7C;AACA,iBAAKd,OAAL;AACD;AA1CuB;AAAA;;;;gBAVjBV;;gBAFAyB;;;;AAYIrB,oBAAa,uDALzB,0DAAU;AACTF,gBAAQ,EAAE,UADD;AAETC,wMAFS;;AAAA,OAAV,CAKyB,GAAbC,cAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBAsB,WAAU;AAAA;AAAA;;AAAVA,iBAAU,uDAnBtB,yDAAS;AACRC,oBAAY,EAAE,CACZC,0DADY,EAEZC,uFAFY,CADN;AAKRC,eAAO,EAAE,CACPC,yDADO,EAEPC,wDAFO,EAGPA,gEAHO,EAIPC,oEAJO,EAKPC,oEAAsBC,oDAAtB,CALO,EAMPC,4EANO,EAOPC,4DAPO,EAQPC,kFARO,CALD;AAeRC,iBAAS,EAAE,CACTC,oDADS;AAfH,OAAT,CAmBsB,GAAVd,WAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BN,UAAMe,WAAU,GAAW,CAC9B;AACIC,YAAI,EAAE,EADV;AAEIC,gBAAQ,EAAE,CAAC;AACPD,cAAI,EAAE,EADC;AAEPE,mBAAS,EAAEhB;AAFJ,SAAD;AAFd,OAD8B,CAA3B;;;;;;;;;;;;;ACJP;;;AAAAiB,uCAAe,g6CAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,ikEAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GenerateKeysComponent","dialogRef","dialog","data","fb","api","events","disableClose","createForm","form","group","quantity","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","generateKeys","value","subscribe","then","result","close","err","controls","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","args","src_app_services_api_service__WEBPACK_IMPORTED_MODULE_2__","typescript_events__WEBPACK_IMPORTED_MODULE_4__","selector","template","KeysComponent","_api","page","pages","itemsPage","total","getKeys","pagination","next","resp","keys","body","count","error","openModal","open","_generateKeys_generate_key_component__WEBPACK_IMPORTED_MODULE_3__","width","afterClosed","eventPage","pageIndex","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","KeysModule","declarations","_keys_component__WEBPACK_IMPORTED_MODULE_0__","_generateKeys_generate_key_component__WEBPACK_IMPORTED_MODULE_6__","imports","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_4__","_angular_router__WEBPACK_IMPORTED_MODULE_11__","_keys_routes__WEBPACK_IMPORTED_MODULE_3__","src_app_material_material_module__WEBPACK_IMPORTED_MODULE_2__","ngx_dropzone__WEBPACK_IMPORTED_MODULE_12__","src_app_components_components_module__WEBPACK_IMPORTED_MODULE_1__","providers","typescript_events__WEBPACK_IMPORTED_MODULE_5__","KeysRoutes","path","children","component","__webpack_exports__"],"sources":["webpack:///src/app/pages/keys/generateKeys/generate-key.component.ts","webpack:///src/app/pages/keys/keys.component.ts","webpack:///src/app/pages/keys/keys.module.ts","webpack:///src/app/pages/keys/keys.routes.ts","webpack:///src/app/pages/keys/generateKeys/generate-key.component.html","webpack:///src/app/pages/keys/keys.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\nimport { Event } from 'typescript.events';\r\n\r\n@Component({\r\n  selector: 'app-generate-key',\r\n  templateUrl: './generate-key.component.html',\r\n  styleUrls: ['./generate-key.component.scss']\r\n})\r\nexport class GenerateKeysComponent implements OnInit {\r\n  title = \"\";\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GenerateKeysComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    public events: Event\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm(){\r\n    this.form = this.fb.group({\r\n      quantity: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n\r\n  generateKeys(){\r\n    this.api.generateKeys(this.form.value.quantity).subscribe(resp  => {\r\n        showAlert('success', 'Correcto', 'Código creado correctamente', 'btn btn-fill btn-info').then((result: any) => {\r\n            this.close();\r\n        });\r\n    }, (err) => {\r\n        showAlert('error', 'Error', 'Algo ha salido mal, intente más tarde!', 'btn btn-info');\r\n    })\r\n  }\r\n\r\n  get errorsForm() { return this.form.controls; }\r\n\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { GenerateKeysComponent } from './generateKeys/generate-key.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\n\r\n@Component({\r\n  selector: 'app-keys',\r\n  templateUrl: './keys.component.html',\r\n  styleUrls: ['./keys.component.scss']\r\n})\r\nexport class KeysComponent implements OnInit {\r\n  keys: any[] = [];\r\n  searchForm: FormGroup;\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 10, total: 1 };\r\n  wordToSearch: string = '';\r\n  count: number = 0;\r\n\r\n  constructor(\r\n    private _api: ApiService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getKeys();\r\n  }\r\n\r\n  getKeys() {\r\n    this._api.getKeys(this.pagination.page, this.pagination.itemsPage).subscribe({\r\n      next: (resp: any) => {\r\n        this.keys = resp.body.keys;\r\n        this.pagination = resp.body.pagination;\r\n        this.count = resp.body.pagination.total;\r\n      },\r\n      error: (err) => {\r\n        showAlert('error', 'Error', 'Algo ha salido mal, intente más tarde!', 'btn btn-info');\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const openModal = this.dialog.open(GenerateKeysComponent, {\r\n      width: '300px'\r\n    });\r\n\r\n    openModal.afterClosed().subscribe(result => {\r\n      this.getKeys();\r\n    });\r\n  }\r\n\r\n  changePage(eventPage: PageEvent) {\r\n    this.pagination.page = eventPage.pageIndex + 1;\r\n    this.getKeys();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KeysComponent } from './keys.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { KeysRoutes } from './keys.routes';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Event } from 'typescript.events';\r\nimport { GenerateKeysComponent } from './generateKeys/generate-key.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    KeysComponent,\r\n    GenerateKeysComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    RouterModule.forChild(KeysRoutes),\r\n    MaterialModule,\r\n    NgxDropzoneModule,\r\n    ComponentsModule\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class KeysModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { KeysComponent } from './keys.component';\r\n\r\n\r\nexport const KeysRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: KeysComponent\r\n        }]\r\n    }\r\n];","export default \"<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n    <h6 class=\\\"modal-title\\\">Generar Códigos</h6>\\r\\n    <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n        <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Cantidad</mat-label>\\r\\n                        <input type=\\\"number\\\"  matInput name=\\\"quantity\\\" formControlName=\\\"quantity\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.quantity.touched) && errorsForm.quantity.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n    <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"generateKeys()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\">\\r\\n        Guardar \\r\\n    </button>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\">\\r\\n                        <h4 class=\\\"title\\\">Códigos: {{count}}</h4>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"content table-responsive table-full-width\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Código</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody *ngIf=\\\"keys.length > 0\\\">\\r\\n                                <tr *ngFor=\\\"let item of keys; let i=index;\\\">\\r\\n                                    <td>{{item.key}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <p class=\\\"msg-empty\\\" *ngIf=\\\"keys.length ===  0\\\">No existen registros</p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div *ngIf=\\\"keys?.length !==0\\\" class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col d-flex justify-content-end\\\">\\r\\n                                <mat-paginator #paginator showFirstLastButtons [length]=\\\"pagination.total\\\"\\r\\n                                    [pageSize]=\\\"pagination.itemsPage\\\" (page)=\\\"changePage($event)\\\">\\r\\n                                </mat-paginator>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<caption>\\r\\n    <button (click)=\\\"openModal()\\\" id=\\\"addBtn\\\" class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n        <img src=\\\"assets/img/icons/mas.png\\\">\\r\\n      </button>\\r\\n</caption>\";"]}