{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA,kBAAc,sDAAOA,IAAP,EAAOC,yBAAP,CAAd,CAFO,CAGP;;AACA,eAAW,yDAAUC,GAAV,EAAgB,sDAASC,MAAT,CAAhB,CAAX;AACA,OALO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRP;AACA;AACA;AACA;;;AAIA,2DAAQ,OAAR,EAAkBC,mDAAlB;AACA,2DAAQ,OAAR,EAAkBC,mDAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;AAAe,0CAAUC,IAAV,EAAUC,GAAV,EAAU;AACzB,uBACA;AACA;AACA,sBACAC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;AAAe,0CAAUF,IAAV,EAAUC,GAAV,EAAU;AACzB,uBACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCHA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACAE;AACA;AACA,OAHA,EAIA;;;AACA;AACA;AACAC,cAAU,wDAAUC,IAAV,CAAV;AACA;AAAA,2CAHA,CAIA;;AACA,mBAAe,sDAAOX,IAAP,EAAOY,YAAP,CAAf,CALA,CAMA;;AACAD,yBAAqB,yDAAUL,IAAV,EAAUO,UAAV,CAArB;AACA;AACAC;AACK,SAFL,EAEKC,kBAAoB,2DAAYT,IAAZ,CAApB,EAAgCU,gBAAhC,IAAgC,IAAhC,EAAgC,UAAhC,CAFL,EARA,CAWA;;AACAC;AACI,gEAAUN,IAAV,EAAUO,GAAV;AACJ;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA,kBACAR,MAAc,wDAAUC,IAAV,CAAd,EADA,CAEA;AACA;AAHA,aAKAQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA;AACA;AACAC;AACAN,oBAAkB,8DAAgBH,IAAhB,CAAlB,EAA0C,sDAASR,MAAT,CAA1C,EAAmDF,UAAnD;AACK,SAFL;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;AACO;AACPoB;AACA,OAFO;AAGP;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA,OAFO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBP;AACA;AACA;AACA;;;AACA,uBACA,EADA,EAEA,EAFA,EAGA,EAHA,EAIA,CAJA,EAKA,YALA,EAMA,EANA;AAQA;AACA;AACA;AACA;AACA;;AACO;AACP,mCACA,aAFO,CAGP;;AACA,kDACA;AACAC,6BACA;AADA,UAEAC,IAFA,GAGAC,OAHA,CAGA,OAHA,EAGA,EAHA,EAGA;AAHA,SAIAA,OAJA,CAIA,GAJA,EAIA,GAJA,EAKAA,OALA,CAKA,GALA,EAKA,GALA,EAMAA,OANA,CAMA,WANA,EAMA,OANA,EAOAA,OAPA,CAOA,GAPA,EAOA,MAPA,EAOA;AAPA,SAQAA,OARA,CAQA,oBARA,EAQA,OARA,EANO,CAc0C;;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlB;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA,eAAWA,gDAAX,EAA6DC,KAA7D,EAA6D;AAC7DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACAC;AACA,wCACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO;AACP;AAAA;AAAA;;AACA,eAAWD,4CAAX,EAAyDmB,GAAzD,EAAyD;AACzDnB;AACAoB;AACA;;AACAC;AACAA;AACA;AACA;;;;;;;;;;;;;;;;;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AKN,cAAT,EAAyB;AACvB,mBAAKA,cAAL,CAAoBM,UAApB;AACD;AACF;AArHuB;AAAA;;;;gBANjBC;;;;AAMIjO,oBAAa,uDAHzB,2DAAW;AACVmN,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbnN,cAAa,CAAb;;;;;;;;;;;;;ACXb;;;AAAAkO,uCAAe,4mHAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,wnJAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,yhPAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,6BAA2B,kDAAML,+CAAN,CAA3B;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,uBACAA,6BACAA,YADA,GAEA,IAAsBM,gDAAtB,CAA0B;AAAGjJ;AAAH,WAA1B,CAHA;AAIA;AACA;AACA;AACA;;AACA,2BACA2I,+DADA;AAEA;AACA;AACA;AACA;;AACA,4BACAA,sDAAkEO,+DADlE;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,0DACAP,sBADA,GAEA,IAFA;AAGA;AACA;AACA;AACA;;AACA,8DACAA,wBADA,GAEA,IAFA;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAQ;AACA;AACA;AACAlJ,gCADA;AAEAmJ,0CAFA;AAGAC,wCAHA;AAIAC,wCAJA;AAKAC,wCALA;AAMAC,oDANA;AAOAC,+DAPA;AAQApW,gCARA;AASAqW,0CATA;AAUAC,sCAVA;AAWAC,gDAXA;AAYA9J,qEAZA;AAaA+J,2EAbA;AAcAC,sCAdA;AAeAjK,sCAfA;AAgBAK,uDACA,gCADA,GAEAvG,SAlBA;AAmBAoQ,2DACA,kCADA,GAEApQ,SArBA;AAsBAwG;AAtBA;AAwBA,SA1BA;AA2BA;AACA;AACA;AACA;AACA;;;AACAgJ;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,6BAA2B,kDAAMM,+BAAN,CAA3B;AACA,SAHA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAN;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACAA;AACA;AACA,SAFA;;AAGA;AACC,OA1cD;AA2cA;;;AAAAH,uCAAeG,IAAf;;;","names":["date","opts","sec","locale","_lang_en_US__WEBPACK_IMPORTED_MODULE_0__","_lang_zh_CN__WEBPACK_IMPORTED_MODULE_1__","diff","idx","unit","clearTimeout","clear","node","relativeDate","localeFunc","run","Math","minInterval","TIMER_POOL","tid","Object","nodeList","Locales","input","trim","replace","i","rst","d","value","index","exports","default_1","ActionsComponent","dialogRef","dialog","data","events","socketService","apiService","text","Date","timeago_js_lib_lang_es__WEBPACK_IMPORTED_MODULE_6__","name","identifier","getLastStats","socketConnect","getCentralInformationLast","subscribe","res","batteryStatus","boxStats","batteryStatusAt","createdAt","batteryStatusTimeAgo","console","log","powerOutage","powerOutageAt","powerOutageTimeAgo","connected","connectedAt","connectedTimeAgo","payload","publishMqttMessage","qos","retain","opt","close","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","args","typescript_events__WEBPACK_IMPORTED_MODULE_4__","src_app_services_socket_service__WEBPACK_IMPORTED_MODULE_3__","src_app_services_api_service__WEBPACK_IMPORTED_MODULE_2__","selector","template","InfoAlertsComponent","constructor","fb","api","_socket","user","idAlert","latE","lat","lngE","lng","ngOnInit","createForm","getUserPosition","_id","listenForRealtimeData","positionSubscription","listenForPositions","positions","length","coordinates","push","mapCard","plotRoute","mqttSubscription","listenForMqttMessages","topic","access","message","showAlert","postComment","startLoading","putAlertHeeded","description","form","comment","administrator","getUser","replyDate","_","finishLoading","ngOnDestroy","unsubscribe","convertCoordsToAddress","lastPosition","getAddressFromCoords","Number","resp","address","err","sendWhatsAppMessage","event","preventDefault","googleMapsLink","ci","phone","whatsappUrl","encodeURIComponent","window","open","position","body","group","Validators","dialogResult","undefined","localStorage","getItem","handleCoordinates","type","title","classBtn","Swal","buttonsStyling","confirmButtonClass","allowOutsideClick","then","_this","MatDialogRef","MatDialog","Inject","MAT_DIALOG_DATA","FormBuilder","ApiService","SocketService","ViewChild","Component","MapComponent","_api","notifyService","page","pages","itemsPage","total","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","loadOpenStreet","getTeams","listenMqttMessages","map","getView","on","zoomLevel","getZoom","updateMarkerStyles","markerId","markers","hasOwnProperty","marker","style","getStyle","textStyle","getText","ol_style_Text__WEBPACK_IMPORTED_MODULE_11__","setText","get","setFont","setStyle","topico","split","includes","toString","manageAlarms","central","neighborhoods","find","item","alert","substring","status","typesAlert","topicMessageCount","getAlerts","JSON","parse","showError","ol_Feature__WEBPACK_IMPORTED_MODULE_12__","geometry","ol_geom__WEBPACK_IMPORTED_MODULE_13__","parseFloat","transform","id","changePinColor","mensaje","setMarkerStyle","searchForm","teams","point","center","reduce","accumulator","current","setCenter","zoom","calculateZoomForPoints","setZoom","layerId","layerRegistry","removeLayer","singleClickListener","incomingMarker","neighborhood","set","iconType","offsetY","fill","ol_style_Fill__WEBPACK_IMPORTED_MODULE_15__","color","font","backgroundFill","padding","markerStyle","ol_style_Style__WEBPACK_IMPORTED_MODULE_16__","image","ol_style_Icon__WEBPACK_IMPORTED_MODULE_17__","crossOrigin","anchor","anchorXUnits","ol_style_IconAnchorUnits__WEBPACK_IMPORTED_MODULE_18__","anchorYUnits","src","src_app_configurations_url_service__WEBPACK_IMPORTED_MODULE_3__","teamSelected","clearMapState","getNeighborhoodByTeam","pagination","wordToSearch","centerMap","forEach","setMarker","vectorSource","ol_source_Vector__WEBPACK_IMPORTED_MODULE_19__","features","vectorLayer","ol_layer_Vector__WEBPACK_IMPORTED_MODULE_20__","source","addLayer","evt","forEachFeatureAtPixel","pixel","feature","_actions_actions_component__WEBPACK_IMPORTED_MODULE_9__","width","points","minX","min","minY","maxX","max","maxY","centerX","centerY","extentWidth","extentHeight","mapContainer","document","getElementById","containerWidth","clientWidth","containerHeight","clientHeight","resolutionX","resolutionY","resolution","log2","ol_Map__WEBPACK_IMPORTED_MODULE_21__","controls","rotate","target","layers","ol_layer_Tile__WEBPACK_IMPORTED_MODULE_23__","ol_source_XYZ__WEBPACK_IMPORTED_MODULE_24__","url","view","ol_View__WEBPACK_IMPORTED_MODULE_25__","maxZoom","minZoom","patchValue","selected","teamId","teamSelectedId","alerts","isLoadingAlerts","getAlertsByTeam","setTimeout","stopSound","isSound","playSound","notificationMessage","imgAlert","imgDefault","img","audio","audioPlayer","nativeElement","play","pause","currentTime","modal","_info_alert_info_alert_component__WEBPACK_IMPORTED_MODULE_5__","afterClosed","infoData","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_26__","src_app_services_notifications_service__WEBPACK_IMPORTED_MODULE_8__","src_app_services_socket_service__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_27__","MapModule","declarations","_map_component__WEBPACK_IMPORTED_MODULE_3__","_actions_actions_component__WEBPACK_IMPORTED_MODULE_7__","imports","_angular_common__WEBPACK_IMPORTED_MODULE_10__","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_0__","ngx_toastr__WEBPACK_IMPORTED_MODULE_12__","timeOut","positionClass","preventDuplicates","_angular_router__WEBPACK_IMPORTED_MODULE_13__","_map_routes__WEBPACK_IMPORTED_MODULE_4__","src_app_material_material_module__WEBPACK_IMPORTED_MODULE_1__","src_app_components_components_module__WEBPACK_IMPORTED_MODULE_6__","providers","typescript_events__WEBPACK_IMPORTED_MODULE_2__","MapRoutes","path","children","component","_map_component__WEBPACK_IMPORTED_MODULE_0__","NotificationService","toastr","success","error","info","warning","ngx_toastr__WEBPACK_IMPORTED_MODULE_0__","providedIn","rxjs__WEBPACK_IMPORTED_MODULE_3__","socket","_configurations_url_service__WEBPACK_IMPORTED_MODULE_1__","query","mqttMessageSource","next","socketPosition","positionSource","asObservable","options","emit","eventName","disconnect","_api_service__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","_Fill_js__WEBPACK_IMPORTED_MODULE_1__","_TextPlacement_js__WEBPACK_IMPORTED_MODULE_2__","Text","placement","maxAngle","overflow","rotation","rotateWithView","scale","textAlign","justify","textBaseline","stroke","offsetX","backgroundStroke"],"sources":["webpack:///node_modules/timeago.js/esm/format.js","webpack:///node_modules/timeago.js/esm/index.js","webpack:///node_modules/timeago.js/esm/lang/en_US.js","webpack:///node_modules/timeago.js/esm/lang/zh_CN.js","webpack:///node_modules/timeago.js/esm/realtime.js","webpack:///node_modules/timeago.js/esm/register.js","webpack:///node_modules/timeago.js/esm/utils/date.js","webpack:///node_modules/timeago.js/esm/utils/dom.js","webpack:///node_modules/timeago.js/lib/lang/es.js","webpack:///src/app/pages/map/actions/actions.component.ts","webpack:///src/app/pages/map/info-alert/info-alert.component.ts","webpack:///src/app/pages/map/map.component.ts","webpack:///src/app/pages/map/map.module.ts","webpack:///src/app/pages/map/map.routes.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/pages/map/actions/actions.component.html","webpack:///src/app/pages/map/info-alert/info-alert.component.html","webpack:///src/app/pages/map/map.component.html","webpack:///node_modules/ol/style/Text.js"],"sourcesContent":["import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n","var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1(number, index) {\n    return [\n        ['justo ahora', 'en un rato'],\n        ['hace %s segundos', 'en %s segundos'],\n        ['hace 1 minuto', 'en 1 minuto'],\n        ['hace %s minutos', 'en %s minutos'],\n        ['hace 1 hora', 'en 1 hora'],\n        ['hace %s horas', 'en %s horas'],\n        ['hace 1 día', 'en 1 día'],\n        ['hace %s días', 'en %s días'],\n        ['hace 1 semana', 'en 1 semana'],\n        ['hace %s semanas', 'en %s semanas'],\n        ['hace 1 mes', 'en 1 mes'],\n        ['hace %s meses', 'en %s meses'],\n        ['hace 1 año', 'en 1 año'],\n        ['hace %s años', 'en %s años'],\n    ][index];\n}\nexports.default = default_1;\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n// ELIMINA: import { MqttServiceService } from 'src/app/services/mqtt/mqtt-service.service';\r\n// AGREGA:\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { Event } from 'typescript.events';\r\nimport { register, format } from 'timeago.js';\r\nimport es from 'timeago.js/lib/lang/es';\r\n\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.component.html',\r\n  styleUrls: ['./actions.component.scss']\r\n})\r\nexport class ActionsComponent implements OnInit {\r\n  name = '';\r\n  identifier = '';\r\n\r\n  alerts: object[] = [\r\n    {\r\n      text: 'SOS',\r\n      value: '1'\r\n    },\r\n    {\r\n      text: 'SOSPECHOSO',\r\n      value: '2'\r\n    },\r\n    {\r\n      text: 'INUNDACIÓN',\r\n      value: '6'\r\n    },\r\n    {\r\n      text: 'TERREMOTO',\r\n      value: '7'\r\n    },\r\n    {\r\n      text: 'DISUASIVA',\r\n      value: '10'\r\n    },\r\n    {\r\n      text: 'LIBADORES',\r\n      value: '11'\r\n    },\r\n    {\r\n      text: 'EXTORSIONADOR',\r\n      value: '12'\r\n    },\r\n    {\r\n      text: 'P0',\r\n      value: '13'\r\n    },\r\n    {\r\n      text: 'P1',\r\n      value: '14'\r\n    },\r\n    {\r\n      text: 'P2',\r\n      value: '15'\r\n    }\r\n  ];\r\n\r\n  icons: any[] = [];\r\n\r\n  connected = '';\r\n  connectedAt: Date = new Date();\r\n  connectedTimeAgo = '';\r\n\r\n  powerOutage = '';\r\n  powerOutageAt: Date = new Date();\r\n  powerOutageTimeAgo = '';\r\n\r\n  doorOpen = '';\r\n  doorOpenAt: Date = new Date();\r\n  doorOpenTimeAgo = '';\r\n\r\n  batteryStatus: number | null = null;\r\n  batteryStatusAt: Date = new Date();\r\n  batteryStatusTimeAgo = '';\r\n\r\n  threshold = 12;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ActionsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public events: Event,\r\n    // ELIMINA: private mqttService: MqttServiceService,\r\n    // AGREGA:\r\n    private socketService: SocketService,\r\n    private apiService: ApiService\r\n  ) {\r\n    register('es', es);\r\n    this.name = data.name;\r\n    this.identifier = data.identifier;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLastStats();\r\n    \r\n    // CONECTA EL SOCKET AL INICIAR EL COMPONENTE\r\n    this.socketService.socketConnect(`actions-${this.identifier}`);\r\n  }\r\n\r\n  getLastStats() {\r\n    this.apiService.getCentralInformationLast('battery-status', this.identifier).subscribe((res: any) => {\r\n      this.batteryStatus = res.boxStats[0].batteryStatus;\r\n      this.batteryStatusAt = new Date(res.boxStats[0].createdAt);\r\n      this.batteryStatusTimeAgo = format(this.batteryStatusAt, 'es');\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('sensor-status', this.identifier).subscribe((res: any) => {\r\n      console.log('sensor status', res);\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('power-outage', this.identifier).subscribe((res: any) => {\r\n      this.powerOutage = res.boxStats[0].powerOutage;\r\n      this.powerOutageAt = new Date(res.boxStats[0].createdAt);\r\n      this.powerOutageTimeAgo = format(this.powerOutageAt, 'es');\r\n    });\r\n    \r\n    this.apiService.getCentralInformationLast('connected', this.identifier).subscribe((res: any) => {\r\n      this.connected = res.boxStats[0].connected;\r\n      this.connectedAt = new Date(res.boxStats[0].createdAt);\r\n      this.connectedTimeAgo = format(this.connectedAt, 'es');\r\n    });\r\n  }\r\n\r\n  sendCommand(payload: any) {\r\n    // REEMPLAZA LA PUBLICACIÓN DIRECTA MQTT POR SOCKET.IO\r\n    // this.mqttService.publishToTopic(`alarma/${this.identifier}`, payload.value);\r\n    \r\n    // USA EL SOCKET SERVICE PARA PUBLICAR A TRAVÉS DEL BACKEND\r\n    this.socketService.publishMqttMessage(\r\n      `alarma/${this.identifier}`, \r\n      payload.value, \r\n      { qos: 1, retain: true }\r\n    );\r\n    \r\n    console.log(`Comando enviado: alarma/${this.identifier} = ${payload.value}`);\r\n    \r\n    // this.close('alert');\r\n  }\r\n\r\n  close(opt) {\r\n    this.dialogRef.close({\r\n      opt\r\n    });\r\n  }\r\n}","// MEJORADO: Se añade OnDestroy para la limpieza de suscripciones\r\nimport { Component, Inject, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { MapCardComponent } from 'src/app/components/map-card/map-card.component';\r\nimport Swal, { SweetAlertType } from \"sweetalert2\";\r\n// NUEVO: Se importa Subscription para manejar las suscripciones a Observables\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-info-alerts',\r\n  templateUrl: './info-alert.component.html',\r\n  styleUrls: ['./info-alert.component.scss']\r\n})\r\nexport class InfoAlertsComponent implements OnInit, OnDestroy {\r\n  latE: any = null;\r\n  lngE: any = null;\r\n  heightE = '100%';\r\n  idAlert: any;\r\n  user: any;\r\n  form: FormGroup;\r\n  lastPosition: any;\r\n\r\n  // NUEVO: Variables para guardar las suscripciones y poder limpiarlas después\r\n  private positionSubscription: Subscription;\r\n  private mqttSubscription: Subscription;\r\n\r\n  @ViewChild('mapCard') mapCard: MapCardComponent;\r\n  coordinates = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<InfoAlertsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    private _socket: SocketService\r\n  ) {\r\n    this.user = data.user;\r\n    this.idAlert = data.idAlert;\r\n    this.latE = this.user.lat;\r\n    this.lngE = this.user.lng;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getUserPosition(this.user._id);\r\n\r\n    // SOLUCIÓN: Conectar solo el socket principal (ya que ambos eventos vienen por el mismo socket)\r\n    this._socket.socketConnect(this.user._id);\r\n    \r\n    // Empezamos a escuchar los datos en tiempo real\r\n    this.listenForRealtimeData();\r\n  }\r\n\r\n  // MEJORADO: Un solo método para manejar todas las suscripciones de datos en tiempo real\r\n  listenForRealtimeData() {\r\n    // 1. Escuchar actualizaciones de posición\r\n    this.positionSubscription = this._socket.listenForPositions().subscribe((data: any) => {\r\n      console.log(\"RECIBO DATA DE POSICIÓN:\", data);\r\n      if (data && data.positions && data.positions.length > 0) {\r\n        this.coordinates.push({ lat: data.positions[0].lat, lng: data.positions[0].lng });\r\n        if (this.mapCard) {\r\n          this.mapCard.plotRoute(this.coordinates);\r\n        }\r\n      }\r\n    });\r\n\r\n    // 2. Escuchar mensajes MQTT\r\n    this.mqttSubscription = this._socket.listenForMqttMessages().subscribe((data: any) => {\r\n      console.log(\"RECIBO DATA DE MQTT:\", data);\r\n      // Aquí puedes reaccionar a mensajes MQTT específicos\r\n      if (data.topic === `alarma/${this.user.access}` && data.message === 'F') {\r\n        this.showAlert('info', 'Alarma Desactivada', 'El usuario ha desactivado la alarma remotamente.', 'btn btn-info');\r\n      }\r\n    });\r\n  }\r\n\r\n  postComment() {\r\n    startLoading();\r\n    this.api.putAlertHeeded(\r\n      this.idAlert,\r\n      {\r\n        description: this.form.value.comment,\r\n        administrator: this.getUser(),\r\n        replyDate: new Date()\r\n      },\r\n    ).subscribe(_ => {\r\n      finishLoading();\r\n      this.showAlert('success', 'Correcto', 'Alerta atendida correctamente', 'btn btn-info');\r\n\r\n      // Publicar mensaje MQTT para apagar alarma\r\n      const topic = `alarma/${this.user.access}`;\r\n      const message = 'F';\r\n      this._socket.publishMqttMessage(topic, message, { qos: 2, retain: true });\r\n\r\n    }, (_) => {\r\n      finishLoading();\r\n      this.showAlert('error', 'Error', 'Algo ha salido mal, intente más tarde!', 'btn btn-info');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Limpiar suscripciones\r\n    if (this.positionSubscription) {\r\n      this.positionSubscription.unsubscribe();\r\n    }\r\n    if (this.mqttSubscription) {\r\n      this.mqttSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  convertCoordsToAddress() {\r\n    if (this.lastPosition && this.lastPosition.lat && this.lastPosition.lng) {\r\n      this.api.getAddressFromCoords(Number(this.lastPosition.lat), Number(this.lastPosition.lng)).subscribe((resp: any) => {\r\n        this.user['current_position'] = resp.address['road'];\r\n      }, (err: any) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  sendWhatsAppMessage(event: any) {\r\n    event.preventDefault();\r\n    const googleMapsLink = `https://www.google.com/maps/search/?api=1&query=${this.lastPosition.lat},${this.lastPosition.lng}`;\r\n    const message = `Información:\\n\\nNombre: ${this.user.name}\\nCédula: ${this.user.ci}\\nTeléfono: ${this.user.phone}\\nDirección: ${this.user.address}\\nUbicación: ${googleMapsLink}`;\r\n    const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`;\r\n    window.open(whatsappUrl, '_blank');\r\n  }\r\n\r\n  getUserPosition(user) {\r\n    this.api.getUserPosition(user).subscribe((resp: any) => {\r\n      let position = resp.body['position'];\r\n      this.lastPosition = position;\r\n      this.convertCoordsToAddress();\r\n    }, (err: any) => {\r\n      console.log(\"ERR UP: \", err);\r\n    });\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      comment: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  close(dialogResult = undefined) {\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  getUser() {\r\n    return localStorage.getItem('id-sh');\r\n  }\r\n\r\n  handleCoordinates(event: { lat: number, lng: number }) {\r\n    console.log('Received coordinates:', event);\r\n  }\r\n\r\n  async showAlert(type: SweetAlertType, title: string, text: string, classBtn: string) {\r\n    return await Swal.fire({\r\n      title,\r\n      text,\r\n      type: type,\r\n      buttonsStyling: false,\r\n      confirmButtonClass: classBtn,\r\n      allowOutsideClick: false\r\n    }).then((data) => {\r\n      if (data.value) {\r\n        if (type !== 'info' && type !== 'warning') {\r\n          this.close('close');\r\n        }\r\n      }\r\n    });\r\n  }\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\n/** OpenLayers Map Imports */\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport { defaults as defaultControls } from 'ol/control.js';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Feature from 'ol/Feature';\r\nimport { Geometry, Point } from 'ol/geom';\r\nimport Style from 'ol/style/Style';\r\nimport Fill from 'ol/style/Fill';\r\nimport Text from 'ol/style/Text';\r\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\r\nimport { URL_SERVICES } from 'src/app/configurations/url.service';\r\nimport Icon from 'ol/style/Icon';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport { InfoAlertsComponent } from './info-alert/info-alert.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\n//import { MqttServiceService } from 'src/app/services/mqtt/mqtt-service.service';\r\nimport { SocketService } from 'src/app/services/socket.service';\r\nimport { NotificationService } from 'src/app/services/notifications.service';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { EventsKey } from 'ol/events';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n\r\n})\r\nexport class MapComponent implements OnInit {\r\n  isLoadingAlerts = false;\r\n\r\n  isConnect = false;\r\n  alerts: any[] = [];\r\n\r\n  map: any;\r\n  markers: any = {};\r\n  source: any;\r\n\r\n  fit = true;\r\n  fitF = true;\r\n  center = false;\r\n  centerMarker: any;\r\n\r\n  markerStyle: any;\r\n  zoomGlobal: any;\r\n\r\n  searchForm: FormGroup;\r\n  word: string = '';\r\n  teams: any[] = [];\r\n  neighborhoods: any[] = [];\r\n\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 500, total: 1 };\r\n  wordToSearch: string = '';\r\n\r\n  dataSelected;\r\n  filteredTeams: Observable<any[]>;\r\n  teamsCtrl = new FormControl();\r\n  teamSelectedId: string;\r\n\r\n  layerRegistry: { [key: string]: VectorLayer<any> } = {};\r\n  isSound: boolean = false;\r\n  isBouncing = false;\r\n\r\n  singleClickListener: EventsKey | null = null;\r\n  private topicMessageCount: { [key: string]: number } = {};\r\n\r\n\r\n  @ViewChild('audioPlayer') audioPlayer: ElementRef;\r\n\r\n  constructor(\r\n    private _api: ApiService,\r\n    public fb: FormBuilder,\r\n    public dialog: MatDialog,\r\n    private notifyService: NotificationService,\r\n    private socketService: SocketService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadOpenStreet();\r\n    this.createForm();\r\n    this.getTeams();\r\n    this.listenMqttMessages();\r\n\r\n    this.map.getView().on('change:resolution', () => {\r\n      const zoomLevel = this.map.getView().getZoom();\r\n      this.updateMarkerStyles(zoomLevel);\r\n    });\r\n  }\r\n\r\n  updateMarkerStyles(zoomLevel: number) {\r\n    for (const markerId in this.markers) {\r\n      if (this.markers.hasOwnProperty(markerId)) {\r\n        const marker = this.markers[markerId];\r\n        const style = marker.getStyle();\r\n\r\n        let textStyle = style.getText();\r\n        if (!textStyle) {\r\n          textStyle = new Text({});\r\n        }\r\n        \r\n        textStyle.setText(marker.get('name'));\r\n        textStyle.setFont(10 + 'px sans-serif'); \r\n        style.setText(textStyle);\r\n  \r\n        marker.setStyle(style);\r\n\r\n        // if (style && style.getText()) {\r\n        //   style.getText().setText(zoomLevel > 15 ? marker.get('name') : '');\r\n        // }\r\n        // marker.setStyle(style);\r\n      }\r\n    }\r\n  }\r\n\r\n listenMqttMessages() {\r\n  // Conecta el socket primero\r\n  this.socketService.socketConnect('map-component');\r\n  \r\n  // Escucha mensajes MQTT a través de Socket.IO\r\n  this.socketService.listenForMqttMessages().subscribe((data: any) => {\r\n    const topic = data.topic;\r\n    const message = data.message;\r\n    const topico = topic.split('/')[1];\r\n\r\n    if (topic.includes('alarma')) {\r\n      console.log('ENTRA EN TOPIC ALARMA:', topic, message);\r\n\r\n      if (message.toString().includes('0')) {\r\n        return;\r\n      }\r\n      \r\n      this.manageAlarms(topico, message);\r\n    }\r\n\r\n    console.log('MENSAJE MQTT RECIBIDO:', topic, message);\r\n\r\n    const central = this.neighborhoods.find((item: any) => item.identifier === topico);\r\n    const alert = message.toString().substring(0, 1);\r\n    const status = message.toString().substring(1, message.toString().length);\r\n    \r\n    if (central) {\r\n      this.typesAlert(central, alert, status);\r\n    }\r\n  });\r\n}\r\n\r\n  manageAlarms(topic: string, message: Buffer) {\r\n    if (!this.topicMessageCount[topic]) {\r\n      this.topicMessageCount[topic] = 0;\r\n    }\r\n\r\n    console.log('SUENA: ', this.topicMessageCount);\r\n\r\n    this.topicMessageCount[topic]++;\r\n    if (this.topicMessageCount[topic] > 1) {\r\n      this.getAlerts();\r\n\r\n      const data: string = message.toString('utf-8');\r\n\r\n      console.log('ESTO 1: ', data);\r\n      if (data.includes('out')) {\r\n        console.log('ENTRA EN OUT');\r\n        const user = JSON.parse(data.split('*')[1]);\r\n        this.notifyService.showError('Fuera de cobertura', `${user.name} - Emitió una alerta`);\r\n        if (!this.markers[user._id]) {\r\n          const marker = new Feature({\r\n            geometry: new Point([parseFloat(user.lng), parseFloat(user.lat)]).transform('EPSG:4326', 'EPSG:3857'),\r\n            name: user.name,\r\n            id: user._id\r\n          });\r\n          this.markers[user._id] = marker;\r\n          // TODO: agregar marcador al mapa\r\n          // Crear el vector source con el nuevo marcador\r\n          // const vectorSource = new VectorSource({\r\n          //   features: [marker]\r\n          // });\r\n          //\r\n          // // Crear el vector layer usando el vector source\r\n          // const vectorLayer = new VectorLayer({\r\n          //   source: vectorSource\r\n          // });\r\n          //\r\n          // // Agregar el vector layer al mapa\r\n          // this.map.addLayer(vectorLayer);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (Number(data) < 10) {\r\n        console.log('ENTRA EN ESTO con IS NUMBER');\r\n        this.changePinColor(topic);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  typesAlert(central: any, alert: string, status: string) {\r\n    // C0 corte de corriente solo batería\r\n    // C1 no hay corte de corriente\r\n    // P1 abierta caja\r\n    // P0 caja cerrada\r\n    // B11.5 estado de la batería\r\n    let mensaje = '';\r\n\r\n    switch (alert) {\r\n      case 'C': //Estado Bateria\r\n        if (status === '0') {\r\n          mensaje = 'Central corte de corriente';\r\n        } else {\r\n          mensaje = 'Revisión estado corriente correcto';\r\n        }\r\n        break;\r\n      case 'D':\r\n        if (status === '0') {\r\n          mensaje = 'Central fuera de línea';\r\n          this.setMarkerStyle(this.markers[central.identifier], 'pin-disconnect');\r\n        } else {\r\n          mensaje = 'Central central en línea';\r\n          this.setMarkerStyle(this.markers[central.identifier], 'pin');\r\n        }\r\n        break;\r\n      case 'P': //Estado Caja\r\n        if (status === '0') {\r\n          mensaje = 'Puerta central abierta';\r\n        } else {\r\n          mensaje = 'Puerta central cerrada';\r\n        }\r\n        break;\r\n      case 'B': //Estado bateria\r\n        mensaje = `Estado de la bateria ${status}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.fb.group({\r\n      value: [this.teams[0]]\r\n    });\r\n  }\r\n\r\n  centerMap() {\r\n    const coordinates = this.neighborhoods.map(point => [parseFloat(point.lng), parseFloat(point.lat)]);\r\n\r\n    // Calcular el centro de todas las coordenadas\r\n    const center = coordinates.reduce(\r\n      (accumulator, current) => [accumulator[0] + current[0], accumulator[1] + current[1]],\r\n      [0, 0]\r\n    );\r\n    center[0] /= coordinates.length;\r\n    center[1] /= coordinates.length;\r\n\r\n    // Configurar la vista del mapa para centrarse en el punto calculado\r\n    this.map.getView().setCenter(fromLonLat(center));\r\n    const zoom = this.calculateZoomForPoints(this.neighborhoods);\r\n    this.map.getView().setZoom(zoom);\r\n  }\r\n\r\n clearMapState() {\r\n  this.markers = {};\r\n  this.topicMessageCount = {};\r\n  \r\n  // Ya no necesitas desuscribirte de temas MQTT directamente\r\n  // porque eso lo maneja el backend\r\n  \r\n  // Remover todas las capas del mapa\r\n  for (const layerId in this.layerRegistry) {\r\n    if (this.layerRegistry.hasOwnProperty(layerId)) {\r\n      this.map.removeLayer(this.layerRegistry[layerId]);\r\n    }\r\n  }\r\n\r\n  this.layerRegistry = {};\r\n  this.neighborhoods = [];\r\n\r\n  if (this.singleClickListener) {\r\n    unByKey(this.singleClickListener);\r\n    this.singleClickListener = null;\r\n  }\r\n}\r\n\r\n  setMarker(incomingMarker: any, neighborhood: any) {\r\n    if (!incomingMarker) {\r\n      const marker = new Feature({\r\n        geometry: new Point([parseFloat(neighborhood.lng), parseFloat(neighborhood.lat)]).transform('EPSG:4326', 'EPSG:3857'),\r\n        name: neighborhood.name,\r\n        connected: neighborhood.connected,\r\n        identifier: neighborhood.identifier\r\n      });\r\n      this.markers[neighborhood.identifier] = marker;\r\n      this.setMarkerStyle(marker, neighborhood.connected ? 'pin' : 'pin-disconnect');\r\n    } else {\r\n      incomingMarker.set('connected', neighborhood.connected);\r\n      this.setMarkerStyle(incomingMarker, neighborhood.connected ? 'pin' : 'pin-disconnect');\r\n    }\r\n  }\r\n\r\n  setMarkerStyle(marker: Feature<Geometry>, iconType: string) {\r\n    const text = new Text({\r\n      // text: marker.get('name'),\r\n      text: '',\r\n      offsetY: 12,\r\n      fill: new Fill({ color: 'black' }),\r\n      font: 'bold 14px Arial',\r\n      backgroundFill: new Fill({ color: 'white' }),\r\n      padding: [3, 3, 3, 3]\r\n    });\r\n\r\n    this.markerStyle = new Style({\r\n      image: new Icon({\r\n        crossOrigin: 'anonymous',\r\n        anchor: [24, 48],\r\n        anchorXUnits: IconAnchorUnits.PIXELS,\r\n        anchorYUnits: IconAnchorUnits.PIXELS,\r\n        src: `${URL_SERVICES}/view/${iconType}`\r\n      }),\r\n      text\r\n    });\r\n\r\n    let textStyle = this.markerStyle.getText();\r\n\r\n    if (!textStyle) {\r\n      textStyle = new Text({});\r\n    }\r\n    \r\n    textStyle.setText(marker.get('name'));\r\n    textStyle.setFont(10 + 'px sans-serif'); \r\n    this.markerStyle.setText(textStyle);\r\n\r\n    // const zoomLevel = this.map.getView().getZoom();\r\n    // if (zoomLevel < 16) {\r\n    //   this.markerStyle.setText(null);\r\n    // }\r\n\r\n    marker.setStyle(this.markerStyle);\r\n  }\r\n\r\n\r\ngetNeighborhoodByTeam(teamSelected: string) {\r\n  this.clearMapState();\r\n  this._api.getNeighborhoodByTeam(\r\n    teamSelected,\r\n    this.pagination.page,\r\n    this.pagination.itemsPage,\r\n    this.wordToSearch,\r\n  ).subscribe(resp => {\r\n    this.neighborhoods = resp.body['neighborhoods'];\r\n    this.centerMap();\r\n\r\n    this.neighborhoods.forEach((neighborhood) => {\r\n      // En lugar de suscribirte directamente a MQTT, envía una petición al backend\r\n      // para que él se suscriba y te reenvíe los mensajes via Socket.IO\r\n      console.log('Monitoring neighborhood:', neighborhood.identifier);\r\n      \r\n      this.setMarker(this.markers[neighborhood.identifier], neighborhood);\r\n      const vectorSource = new VectorSource({\r\n        features: [this.markers[neighborhood.identifier]]\r\n      });\r\n      const vectorLayer = new VectorLayer({\r\n        source: vectorSource\r\n      });\r\n      vectorLayer.set('layerId', neighborhood._id);\r\n      \r\n      this.layerRegistry[neighborhood._id] = vectorLayer;\r\n      this.map.addLayer(vectorLayer);\r\n    });\r\n\r\n    // ---> INICIO: CÓDIGO AÑADIDO PARA INTEGRAR ACTIONSCOMPONENT <---\r\n    // 🗺️ Primero, nos aseguramos de limpiar cualquier listener anterior para evitar duplicados.\r\n    if (this.singleClickListener) {\r\n      unByKey(this.singleClickListener);\r\n    }\r\n\r\n    // Creamos el nuevo listener para el evento 'singleclick'\r\n    this.singleClickListener = this.map.on('singleclick', (evt: any) => {\r\n      this.map.forEachFeatureAtPixel(evt.pixel, (feature: any, _: any) => {\r\n        // Si se hizo clic sobre un marcador (feature)\r\n        if (feature) {\r\n          const name = feature.get('name');\r\n          const connected = feature.get('connected');\r\n          const identifier = feature.get('identifier');\r\n          \r\n          // Abrimos el diálogo del ActionsComponent con los datos del marcador\r\n          this.dialog.open(ActionsComponent, {\r\n            width: '60%',\r\n            data: { name, connected, identifier }\r\n          });\r\n        }\r\n      });\r\n    });\r\n    // ---> FIN: CÓDIGO AÑADIDO <---\r\n\r\n  }); // Cierre de la suscripción de _api.getNeighborhoodByTeam\r\n}\r\n\r\n  calculateZoomForPoints(points) {\r\n    if (points.length === 0) {\r\n      return 2; // Valor predeterminado si no hay puntos\r\n    }\r\n\r\n    // Obtener las coordenadas extremas (mínima y máxima) de los puntos\r\n    const minX = Math.min(...points.map(point => parseFloat(point.lng)));\r\n    const minY = Math.min(...points.map(point => parseFloat(point.lat)));\r\n    const maxX = Math.max(...points.map(point => parseFloat(point.lng)));\r\n    const maxY = Math.max(...points.map(point => parseFloat(point.lat)));\r\n\r\n    // Calcular el centro y el ancho/alto de la extensión geográfica\r\n    const centerX = (minX + maxX) / 2;\r\n    const centerY = (minY + maxY) / 2;\r\n    const extentWidth = maxX - minX;\r\n    const extentHeight = maxY - minY;\r\n\r\n    // Obtener el tamaño del contenedor del mapa\r\n    const mapContainer = document.getElementById('map'); // Ajusta el ID según tu estructura HTML\r\n    const containerWidth = mapContainer.clientWidth;\r\n    const containerHeight = mapContainer.clientHeight;\r\n\r\n    // Calcular el zoom necesario para que la extensión geográfica sea completamente visible\r\n    const resolutionX = extentWidth / containerWidth;\r\n    const resolutionY = extentHeight / containerHeight;\r\n    const resolution = Math.max(resolutionX, resolutionY);\r\n\r\n    // Calcular el zoom basado en la resolución y el tamaño del contenedor\r\n    const zoom = Math.log2(360 / (resolution * 256)) - 1;\r\n\r\n    return zoom;\r\n  }\r\n\r\n  loadOpenStreet() {\r\n    this.map = new Map({\r\n      controls: defaultControls({\r\n        zoom: false,\r\n        rotate: false,\r\n      }),\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new XYZ({\r\n            // url: 'https://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga'\r\n            url: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          })\r\n        })\r\n      ],\r\n      view: new View({\r\n        center: [0, 0],\r\n        zoom: 2,\r\n        maxZoom: 19,\r\n        minZoom: 2\r\n      })\r\n    });\r\n  }\r\n\r\n  getTeams() {\r\n    this._api.getTeams(this.pagination.page, this.pagination.itemsPage, this.wordToSearch).subscribe(resp => {\r\n      this.teams = resp.body.teams;\r\n      if (this.teams.length > 0) {\r\n        this.searchForm.patchValue({ value: this.teams[0]._id });\r\n        this.selected(this.searchForm.value.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cuando se cambia el dropdown de teams se pasa como parametro el team y se ejecuta esto.\r\n  selected(teamId: string) {\r\n    this.markers = {};\r\n    this.neighborhoods = [];\r\n    this.getNeighborhoodByTeam(teamId);\r\n    this.teamSelectedId = teamId;\r\n    this.alerts = [];\r\n    this.getAlerts();\r\n  }\r\n\r\n  getAlerts() {\r\n    this.isLoadingAlerts = true;\r\n    this._api.getAlertsByTeam(this.teamSelectedId).subscribe((resp: any) => {\r\n      this.alerts = resp.body.alerts;\r\n      this.isLoadingAlerts = false;\r\n    }, (err: any) => {\r\n      showAlert(\r\n        'error',\r\n        'Error',\r\n        `Algo ha salido mal, intente más tarde!\\n${err}`,\r\n        'btn btn-info',\r\n      );\r\n    })\r\n  }\r\n\r\n  changePinColor(identifier: string) {\r\n    if (!identifier || !this.markers[identifier]) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < 20; i++) {\r\n      setTimeout(() => {\r\n        if (i === 19) {\r\n          this.setMarkerStyle(this.markers[identifier], 'pin');\r\n          this.stopSound();\r\n        }\r\n\r\n        if (i % 2 === 0) {\r\n          this.setMarkerStyle(this.markers[identifier], 'pin4');\r\n        } else {\r\n          this.setMarkerStyle(this.markers[identifier], this.markers[identifier].get('connected') ? 'pin' : 'pin-disconnect');\r\n        }\r\n      }, i * 500);\r\n    }\r\n\r\n\r\n    if (!this.isSound) {\r\n      this.playSound();\r\n    }\r\n\r\n  }\r\n\r\n  getTypeAlert(alert) {\r\n    let notificationMessage;\r\n    let imgAlert;\r\n    let imgDefault = 'assets/img/icons/shadow.png';\r\n\r\n    switch (alert) {\r\n      case 'ALERT_1':\r\n        notificationMessage = 'ALERTA DE SOS';\r\n        imgAlert = 'assets/img/alerts/policebtn.png';\r\n\r\n        break;\r\n      case 'ALERT_2':\r\n        notificationMessage = 'ALERTA DE SOSPECHOSO';\r\n        imgAlert = 'assets/img/alerts/suspect.png';\r\n\r\n        break;\r\n      case 'ALERT_3':\r\n        notificationMessage = 'ALERTA SILENCIOSA';\r\n        imgAlert = 'assets/img/alerts/silencio.png';\r\n\r\n        break;\r\n      case 'ALERT_4':\r\n        notificationMessage = 'ALERTA DE MI UBICACIÓN';\r\n        imgAlert = imgDefault;\r\n\r\n        break;\r\n      case 'ALERT_5':\r\n        notificationMessage = 'ALERTA DE VIOLENCIA DE GÉNERO';\r\n        imgAlert = 'assets/img/alerts/genero.png';\r\n\r\n        break;\r\n      case 'ALERT_6':\r\n        notificationMessage = 'ALERTA DE INUNDACIÓN';\r\n        imgAlert = 'assets/img/alerts/flood.png';\r\n\r\n        break;\r\n      case 'ALERT_7':\r\n        notificationMessage = 'ALERTA DE TERREMOTO';\r\n        imgAlert = 'assets/img/alerts/earthquake.png';\r\n\r\n        break;\r\n\r\n      case 'ALERT_10':\r\n        notificationMessage = 'ALERTA DISUASIVA';\r\n        imgAlert = imgDefault;\r\n        break;\r\n\r\n      case 'ALERT_11':\r\n        notificationMessage = 'ALERTA DE LIBADORES';\r\n        imgAlert = imgDefault;\r\n        break;\r\n\r\n      case 'ALERT_12':\r\n        notificationMessage = 'ALERTA DE EXTORSIONADOR';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_13':\r\n        notificationMessage = 'ALERTA P0';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_14':\r\n        notificationMessage = 'ALERTA P1';\r\n        imgAlert = imgDefault;\r\n        break;\r\n      case 'ALERT_15':\r\n        notificationMessage = 'ALERTA P2';\r\n        imgAlert = imgDefault;\r\n        break;\r\n    }\r\n\r\n    return {\r\n      type: notificationMessage,\r\n      img: imgAlert\r\n    };\r\n  }\r\n\r\n  playSound() {\r\n    this.isSound === true;\r\n    const audio: HTMLAudioElement = this.audioPlayer.nativeElement;\r\n    audio.play();\r\n  }\r\n\r\n  stopSound() {\r\n    this.isSound === false;\r\n    const audio: HTMLAudioElement = this.audioPlayer.nativeElement;\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n  }\r\n\r\n  showAlertInfo(data: any) {\r\n    const modal = this.dialog.open(InfoAlertsComponent, {\r\n      width: '60%',\r\n      data: {\r\n        user: data.user,\r\n        idAlert: data._id\r\n      }\r\n    });\r\n\r\n    modal.afterClosed().subscribe(infoData => {\r\n      if (infoData === undefined) {\r\n        return;\r\n      }\r\n\r\n      this.alerts = [];\r\n      this.getAlerts();\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { Event } from 'typescript.events';\r\nimport { MapComponent } from './map.component';\r\nimport { MapRoutes } from './map.routes';\r\nimport { InfoAlertsComponent } from './info-alert/info-alert.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { ActionsComponent } from './actions/actions.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MapComponent,\r\n    InfoAlertsComponent,\r\n    ActionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n    }),\r\n    RouterModule.forChild(MapRoutes),\r\n    MaterialModule,\r\n    ComponentsModule,\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class MapModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { MapComponent } from './map.component';\r\n\r\n\r\nexport const MapRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: MapComponent\r\n        }]\r\n    }\r\n];","import { Injectable } from '@angular/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n  constructor(private toastr: ToastrService) { }\r\n\r\n  showSuccess(message, title) {\r\n    this.toastr.success(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showError(message, title) {\r\n    this.toastr.error(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showInfo(message, title) {\r\n    this.toastr.info(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n  showWarning(message, title) {\r\n    this.toastr.warning(message, title, {\r\n      positionClass: 'toast-top-left'\r\n    });\r\n  }\r\n\r\n}\r\n","// En src/app/services/socket.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { URL_SOCKET } from '../configurations/url.service';\r\nimport { ApiService } from './api.service';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n  socket: Socket;\r\n  socketPosition: Socket;\r\n\r\n  private mqttMessageSource = new Subject<any>();\r\n  private positionSource = new Subject<any>();\r\n\r\n  constructor(\r\n    private _api: ApiService\r\n  ) { }\r\n\r\n  /**\r\n   * Conecta el socket principal para eventos generales y MQTT.\r\n   * Lo ideal es llamar a esta función una vez que el usuario ha iniciado sesión.\r\n   * @param id Un identificador único, como el ID del usuario.\r\n   */\r\n  socketConnect(id: any) {\r\n    let user = this._api.getUser();\r\n    if (this.socket && this.socket.connected) {\r\n      return;\r\n    }\r\n\r\n    // QUITAR EL NAMESPACE '/angular' - conectar al root\r\n    this.socket = io(`${URL_SOCKET}`, {  // <-- Cambio aquí\r\n      query: { id, user },\r\n    });\r\n\r\n    // Escucha el evento 'mqttMessage' del backend y lo emite a través del Observable\r\n    this.socket.on('mqttMessage', (data) => {\r\n      console.log('Mensaje MQTT recibido en frontend:', data);\r\n      this.mqttMessageSource.next(data);\r\n    });\r\n\r\n    // Agregar listeners para depuración\r\n    this.socket.on('connect', () => {\r\n      console.log('Conectado al servidor Socket.IO');\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Desconectado del servidor Socket.IO');\r\n    });\r\n\r\n    this.socket.on('error', (error) => {\r\n      console.error('Error en Socket.IO:', error);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Conecta el socket secundario, específico para posiciones.\r\n   * @param id Un identificador único, como el ID del usuario o del seguimiento.\r\n   */\r\n  socketPositionConnect(id: any) {\r\n    if (this.socketPosition && this.socketPosition.connected) {\r\n        return;\r\n    }\r\n    \r\n    // QUITAR EL NAMESPACE '/positions' - conectar al root\r\n    this.socketPosition = io(`${URL_SOCKET}`, {  // <-- Cambio aquí\r\n      query: { id },\r\n    });\r\n\r\n    // Escucha el evento 'user-position' y lo emite a través del Observable\r\n    this.socketPosition.on('user-position', (data: any) => {\r\n        this.positionSource.next(data);\r\n    });\r\n  }\r\n\r\n  // --- MÉTODOS PÚBLICOS PARA USAR EN LOS COMPONENTES ---\r\n\r\n  /**\r\n   * Permite a los componentes suscribirse para recibir mensajes MQTT en tiempo real.\r\n   */\r\n  public listenForMqttMessages(): Observable<any> {\r\n    return this.mqttMessageSource.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Permite a los componentes suscribirse para recibir actualizaciones de posición en tiempo real.\r\n   */\r\n  public listenForPositions(): Observable<any> {\r\n    return this.positionSource.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Permite a los componentes enviar una petición al backend para publicar un mensaje MQTT.\r\n   * @param topic El tópico MQTT al que se publicará.\r\n   * @param message El mensaje que se enviará.\r\n   * @param options Opciones adicionales de MQTT (ej: { qos: 2, retain: true }).\r\n   */\r\n  public publishMqttMessage(topic: string, message: string, options?: any) {\r\n    if (this.socket) {\r\n        console.log('Enviando mensaje MQTT:', { topic, message });\r\n        this.socket.emit('publishToMqtt', { topic, message, options });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método genérico para emitir cualquier otro evento al socket principal.\r\n   * @param eventName Nombre del evento.\r\n   * @param data Datos a enviar.\r\n   */\r\n  public emitEvent(eventName: string, data: any) {\r\n    if (this.socket) {\r\n        this.socket.emit(eventName, data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Desconectar sockets\r\n   */\r\n  public disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n    if (this.socketPosition) {\r\n      this.socketPosition.disconnect();\r\n    }\r\n  }\r\n}","export default \"<h2 mat-dialog-title class=\\\"mat-typography\\\">{{name}}</h2>\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"status-container\\\">\\r\\n    <div *ngIf=\\\"connected == null || connected == ''\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"connected == '1'\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">wifi</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>En línea</div>\\r\\n        <div>{{ connectedTimeAgo }}</div>\\r\\n        <div>{{ connectedAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"connected != '1' && connected != null && connected != ''\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">wifi</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Fuera de línea</div>\\r\\n        <div>{{ connectedTimeAgo }}</div>\\r\\n        <div>{{ connectedAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"powerOutage == null || powerOutage == ''\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"powerOutage == '1'\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">power</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Revisión conectado</div>\\r\\n        <div>{{ powerOutageTimeAgo }}</div>\\r\\n        <div>{{ powerOutageAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"powerOutage != '1' && powerOutage != null && powerOutage != ''\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">power</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>Revisión desconectado</div>\\r\\n        <div>{{ powerOutageTimeAgo }}</div>\\r\\n        <div>{{ powerOutageAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus == null\\\" class=\\\"loading-spinner\\\">\\r\\n      <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus <= threshold && batteryStatus != null\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'red'}\\\">battery_alert</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>{{ batteryStatus }}V</div>\\r\\n        <div>{{ batteryStatusTimeAgo }}</div>\\r\\n        <div>{{ batteryStatusAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"batteryStatus > threshold && batteryStatus != null\\\" class=\\\"status-item\\\">\\r\\n      <div class=\\\"icon-container\\\">\\r\\n        <mat-icon [ngStyle]=\\\"{color: 'green'}\\\">battery_alert</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"text-container\\\">\\r\\n        <div>{{ batteryStatus }}V</div>\\r\\n        <div>{{ batteryStatusTimeAgo }}</div>\\r\\n        <div>{{ batteryStatusAt | date:'dd/MM/yy HH:mm' }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"grid-container\\\">\\r\\n    <div class=\\\"grid-item\\\" *ngFor=\\\"let alert of alerts\\\">\\r\\n      <button mat-button class=\\\"custom-mat-button\\\" (click)=\\\"sendCommand(alert)\\\">{{ alert.text }}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"center-button-container\\\">\\r\\n    <button mat-button class=\\\"custom-mat-button-red\\\" (click)=\\\"sendCommand({'value': '0'})\\\">Apagar</button>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n<div tabindex=\\\"-1\\\" cdkFocusInitial></div>\\r\\n\";","export default \"<!-- <div class=\\\"modal-header1 text-left row mb-1\\\"> -->\\r\\n<!--     <h6 class=\\\"modal-title\\\">Información alerta</h6> -->\\r\\n<!--     <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\"> -->\\r\\n<!--         <i class=\\\"fa fa-times icon-modal-close\\\"></i> -->\\r\\n<!--     </button> -->\\r\\n<!-- </div> -->\\r\\n<!--  -->\\r\\n<!-- <mat-dialog-content class=\\\"mat-typography\\\"> -->\\r\\n<!--     <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\"> -->\\r\\n<!--         <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"> -->\\r\\n<!--             <div class=\\\"row\\\"> -->\\r\\n<!--                 <div class=\\\"col-xs-4 col-sm-4 col-md-4 col-lg-4\\\" > -->\\r\\n<!--                  -->\\r\\n<!--                     <strong>Usuario</strong><br> -->\\r\\n<!--                     <p> -->\\r\\n<!--                         <small>Nombre: <strong>{{ user.name }}</strong></small><br> -->\\r\\n<!--                         <small>Cédula: <strong>{{ user.ci }}</strong></small><br> -->\\r\\n<!--                         <small>Teléfono: <strong>{{ user.phone }}</strong></small><br> -->\\r\\n<!--                         <small>Dirección: <strong>{{ user.address }}</strong></small><br> -->\\r\\n<!--                     </p> -->\\r\\n<!--                 </div> -->\\r\\n<!--                 <div class=\\\"col-xs-8 col-sm-8 col-md-8 col-lg-8\\\" style=\\\"height: 55vh;\\\" > -->\\r\\n<!--                     <app-map-card [lat]=\\\"latE\\\" [lng]=\\\"lngE\\\" [heightE]=\\\"heightE\\\" #mapCard></app-map-card> -->\\r\\n<!--                 </div> -->\\r\\n<!--             </div> -->\\r\\n<!--  -->\\r\\n<!--         </div> -->\\r\\n<!--          -->\\r\\n<!--         <div class=\\\"row\\\"> -->\\r\\n<!--             <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" > -->\\r\\n<!--                 <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\"> -->\\r\\n<!--                     <mat-label>Motivo de alerta</mat-label> -->\\r\\n<!--                     <input matInput name=\\\"comment\\\" formControlName=\\\"comment\\\"> -->\\r\\n<!--                 </mat-form-field> -->\\r\\n<!--             </div> -->\\r\\n<!--  -->\\r\\n<!--         </div> -->\\r\\n<!--     </form> -->\\r\\n<!-- </mat-dialog-content> -->\\r\\n<!--  -->\\r\\n<!-- <div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\"> -->\\r\\n<!--     <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"postComment()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\"> -->\\r\\n<!--         Guardar  -->\\r\\n<!--     </button> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n  <h6 class=\\\"modal-title\\\">Información alerta</h6>\\r\\n  <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n    <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <div class=\\\"map-container\\\">\\r\\n            <app-map-card [lat]=\\\"latE\\\" [lng]=\\\"lngE\\\" [heightE]=\\\"heightE\\\" #mapCard></app-map-card>\\r\\n            <div class=\\\"info-card\\\">\\r\\n              <strong>Usuario</strong><br>\\r\\n              <p>\\r\\n                <small>Nombre: <strong>{{ user.name }}</strong></small><br>\\r\\n                <small>Cédula: <strong>{{ user.ci }}</strong></small><br>\\r\\n                <small>Teléfono: <strong>{{ user.phone }}</strong></small><br>\\r\\n                <small>Dirección: <strong>{{ user.address }}</strong></small><br>\\r\\n                <small>Dirección Actual: <strong>{{ user.current_position }}</strong></small><br>\\r\\n                <a href=\\\"#\\\" (click)=\\\"sendWhatsAppMessage($event)\\\">\\r\\n                  <i class=\\\"fab fa-whatsapp\\\"></i> Compartir\\r\\n                </a>\\r\\n              </p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n          <mat-label>Motivo de alerta</mat-label>\\r\\n          <input matInput name=\\\"comment\\\" formControlName=\\\"comment\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n  <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"postComment()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\">\\r\\n    Guardar\\r\\n  </button>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\" >\\r\\n                        <strong class=\\\"h4 title\\\">SALA DE MONITOREO</strong>\\r\\n                            <mat-icon title=\\\"Centrar\\\" style=\\\"float: right; cursor: pointer;\\\" (click)=\\\"centerMap()\\\">center_focus_strong</mat-icon>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <form [formGroup]=\\\"searchForm\\\" class=\\\"form-horizontal\\\">\\r\\n                            <div id=\\\"map\\\" class=\\\"map\\\">\\r\\n                                <mat-form-field class=\\\"col-xs-3 col-sm-3 col-md-3 custom-input\\\"  appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n                                    <mat-label> Teams</mat-label>\\r\\n                                    <mat-select name=\\\"value\\\" formControlName=\\\"value\\\" (selectionChange)=\\\"selected($event.value)\\\">\\r\\n                                      <mat-option *ngFor=\\\"let item of teams\\\" [value]=\\\"item._id\\\">\\r\\n                                        TEAM - {{ item.name }}\\r\\n                                      </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n\\r\\n                                <div id=\\\"card-alert\\\" class=\\\"card\\\">\\r\\n                                  <div class=\\\"card-header\\\">\\r\\n                                    <h5 class=\\\"h6 mb-0 text-center\\\" style=\\\"font-weight: bold;\\\">\\r\\n                                      Alertas Pendientes\\r\\n                                      <i *ngIf=\\\"isLoadingAlerts\\\" class=\\\"fas fa-spinner fa-spin\\\"></i>\\r\\n                                    </h5>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"card-body\\\" >\\r\\n                                    <div\\r\\n                                      class=\\\"timeline timeline-one-side\\\"\\r\\n                                      data-timeline-axis-style=\\\"dashed\\\"\\r\\n                                      data-timeline-content=\\\"axis\\\"\\r\\n                                    >\\r\\n                                      <div class=\\\"timeline-block\\\" *ngFor=\\\"let item of alerts\\\" style=\\\"margin-top: -2vh !important;\\\">\\r\\n                                        <span class=\\\"timeline-step badge-warning\\\" style=\\\"cursor: pointer;\\\" title=\\\"Ver más\\\" (click)=\\\"showAlertInfo(item)\\\">\\r\\n                                          <mat-icon>notifications_active</mat-icon>\\r\\n                                          <!-- <img src=\\\"{{ getTypeAlert(item.type).img }}\\\" style=\\\"height: 4vh; width: 4vh;\\\" alt=\\\"\\\"> -->\\r\\n                                        </span>\\r\\n              \\r\\n                                        <div class=\\\"timeline-content\\\">\\r\\n                                          <div class=\\\"d-flex justify-content-between\\\">\\r\\n                                            <div>\\r\\n                                              <span class=\\\"text-sm font-weight-bold\\\">\\r\\n                                                {{ getTypeAlert(item.type).type }} - \\r\\n                                                {{ item.access.name }}\\r\\n                                              </span>\\r\\n                                              <br>\\r\\n                                              <small style=\\\"font-weight: 500;\\\">{{ item.user.name }}</small>\\r\\n                                              <!-- <small style=\\\"font-weight: 500;\\\">{{ getTypeAlert(item.type).type }}</small> -->\\r\\n                                            </div>\\r\\n                          \\r\\n                                            <div class=\\\"text-right\\\">\\r\\n                                              <small class=\\\"text-muted\\\">\\r\\n                                                <i class=\\\"fas fa-clock mr-1\\\"> </i> \\r\\n                                                {{ item.date | date:'HH:mm' }}\\r\\n                                              </small>\\r\\n                                            </div>\\r\\n                                          </div>\\r\\n                          \\r\\n                                         \\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                          \\r\\n                                    </div>\\r\\n                                  </div>\\r\\n\\r\\n                                </div>\\r\\n                              </div>\\r\\n                          </form>\\r\\n                        </div>\\r\\n                    </div>  \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                      <h6 class=\\\"h2 mb-0\\\">Alertas</h6>\\r\\n                    </div>\\r\\n      \\r\\n                    <div class=\\\"card-body\\\" id=\\\"card-alert\\\">\\r\\n                      <div\\r\\n                        class=\\\"timeline timeline-one-side\\\"\\r\\n                        data-timeline-axis-style=\\\"dashed\\\"\\r\\n                        data-timeline-content=\\\"axis\\\"\\r\\n                      >\\r\\n                        <div class=\\\"timeline-block\\\" *ngFor=\\\"let item of alerts\\\">\\r\\n                          <span class=\\\"timeline-step badge-success\\\" style=\\\"cursor: pointer;\\\" title=\\\"Ver más\\\" (click)=\\\"showAlertInfo(item)\\\">\\r\\n                            <img src=\\\"{{ getTypeAlert(item.type).img }}\\\" style=\\\"height: 4vh; width: 4vh;\\\" alt=\\\"\\\">\\r\\n                          </span>\\r\\n\\r\\n                          <div class=\\\"timeline-content\\\">\\r\\n                            <div class=\\\" d-flex justify-content-between pt-1\\\">\\r\\n                              <div>\\r\\n                                <span class=\\\" text-muted text-sm font-weight-bold\\\">\\r\\n                                  {{ item.access.name }}\\r\\n                                </span>\\r\\n                              </div>\\r\\n            \\r\\n                              <div class=\\\"text-right\\\">\\r\\n                                <small class=\\\"text-muted\\\">\\r\\n                                  <i class=\\\"fas fa-clock mr-1\\\"> </i> \\r\\n                                  {{ item.date | date:'HH:mm' }}\\r\\n                                </small>\\r\\n                              </div>\\r\\n                            </div>\\r\\n            \\r\\n                            <p class=\\\" text-sm mt-1 mb-0\\\">\\r\\n                              <strong>{{ item.user.name }}</strong><br>\\r\\n                              <small>{{ getTypeAlert(item.type).type }}</small>\\r\\n                            </p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n            \\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div> -->\\r\\n        </div>\\r\\n\\r\\n        <audio #audioPlayer>\\r\\n          <source src=\\\"assets/notification.mp3\\\" type=\\\"audio/mp3\\\">\\r\\n          Tu navegador no soporta la reproducción de audio.\\r\\n        </audio>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <caption>\\r\\n  <button id=\\\"addBtn\\\" class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n      <i  class=\\\"fa fa-chevron-up\\\"></i>\\r\\n  </button>\\r\\n</caption> -->\\r\\n\";","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n"]}