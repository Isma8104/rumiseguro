{"version":3,"file":"src_app_pages_teams_teams_module_ts-es2020.js","mappings":"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","sources":["./src/app/pages/teams/add-teams/add-teams.component.ts","./src/app/pages/teams/teams.component.ts","./src/app/pages/teams/teams.module.ts","./src/app/pages/teams/teams.routes.ts","./src/app/pages/teams/add-teams/add-teams.component.html","./src/app/pages/teams/teams.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\nimport { Event } from 'typescript.events';\r\nimport { FileUploadValidators } from '@iplab/ngx-file-upload';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-teams',\r\n  templateUrl: './add-teams.component.html',\r\n  styleUrls: ['./add-teams.component.scss']\r\n})\r\nexport class AddTeamsComponent implements OnInit {\r\n  title = \"\";\r\n  form: FormGroup;\r\n  team;\r\n\r\n  private filesControl = new FormControl(null, FileUploadValidators.filesLimit(1));\r\n  files: File[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddTeamsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    public events: Event\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n    this.title = data.title;\r\n    this.team = data.team;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.title === 'Editar') {\r\n      // this.convertFileExist(this.team.image);\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      name: [(this.title === 'Agregar') ? '' : this.team.name, [Validators.required]],\r\n      licenseStart: [(this.title === 'Agregar') ? '' : new Date(Date.parse(this.team.licenseStart)).toISOString().substring(0, 10), [Validators.required]],\r\n      licenseEnd: [(this.title === 'Agregar') ? '' : new Date(Date.parse(this.team.licenseEnd)).toISOString().substring(0, 10), [Validators.required]],\r\n      maxPlants: [(this.title === 'Agregar') ? '' : this.team.maxPlants, [Validators.required]],\r\n      maxButtons: [(this.title === 'Agregar') ? '' : this.team.maxButtons, [Validators.required]],\r\n      maxUsers: [(this.title === 'Agregar') ? '' : this.team.maxUsers, [Validators.required]],\r\n      radius: [(this.title === 'Agregar') ? '' : this.team.radius, [Validators.required]],\r\n      company: [(this.title === 'Agregar') ? '' : this.team.company, [Validators.required]],\r\n      image: [(this.title === 'Agregar') ? '' : this.team.image],\r\n      imgName: [(this.title === 'Agregar') ? '' : 'tiene valor', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n    this.files[0] = (event.addedFiles);\r\n    this.filesControl = new FormControl(this.files[0], FileUploadValidators.filesLimit(1));\r\n    this.form.get('image').setValue(this.filesControl);\r\n    this.form.get('imgName').setValue('tiene valor');\r\n    // this.form = this.fb.group({\r\n    //   name: [this.form.value.name, [Validators.required]],\r\n    //   licenseStart: [this.form.value.licenseStart, [Validators.required]],\r\n    //   licenseEnd: [this.form.value.licenseEnd, [Validators.required]],\r\n    //   maxPlants: [this.form.value.maxPlants, [Validators.required]],\r\n    //   maxButtons: [this.form.value.maxButtons, [Validators.required]],\r\n    //   maxUsers: [this.form.value.maxUsers, [Validators.required]],\r\n    //   image: [this.filesControl],\r\n    //   imgName: ['tiene valor', Validators.required]\r\n    // });\r\n  }\r\n\r\n  onRemove(event) {\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n    this.filesControl = new FormControl('', FileUploadValidators.filesLimit(1));\r\n    this.form.get('image').setValue(this.filesControl);\r\n    this.form.get('imgName').setValue('');\r\n    // this.form = this.fb.group({\r\n    //   name: [this.form.value.name, [Validators.required]],\r\n    //   licenseStart: [this.form.value.licenseStart, [Validators.required]],\r\n    //   licenseEnd: [this.form.value.licenseEnd, [Validators.required]],\r\n    //   maxPlants: [this.form.value.maxPlants, [Validators.required]],\r\n    //   maxButtons: [this.form.value.maxButtons, [Validators.required]],\r\n    //   maxUsers: [this.form.value.maxUsers, [Validators.required]],\r\n    //   image: [this.filesControl],\r\n    //   imgName: ['', Validators.required]\r\n    // });\r\n  }\r\n\r\n  configTeams() {\r\n    if (this.title === 'Editar') {\r\n      this.putTeams();\r\n    } else {\r\n      this.postTeams();\r\n    }\r\n  }\r\n\r\n  async postTeams() {\r\n    if ((this.form.value.image && this.form.value.image.value) && this.form.value.image.value[0]) {\r\n      const imageBase = await this.convertFile(this.form.value.image.value[0]);\r\n      this.form.get('image').setValue(imageBase);\r\n    }\r\n    this.api.postTeams(this.form.value).subscribe({\r\n      next: (res) => {\r\n        showAlert('success', 'Correcto', 'Team creado correctamente', 'btn btn-fill btn-info').then((result: any) => {\r\n          this.close();\r\n        });\r\n      },\r\n      error: (err) => {\r\n        if (err.error.message.message.includes('name is already in use')) {\r\n          showAlert('error', 'Error', 'El nombre proporcionado ya está registrado en el sistema. Por favor, ingresa un nombre diferente.', 'btn btn-info');\r\n        } else {\r\n          showAlert('error', 'Error', 'Algo ha salido mal, por favor inténtalo de nuevo más tarde.', 'btn btn-info');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async putTeams() {\r\n\r\n    if ((this.form.value.image && this.form.value.image.value) && this.form.value.image.value[0]) {\r\n      const imageBase = await this.convertFile(this.form.value.image.value[0]);\r\n      this.form.get('image').setValue(imageBase);\r\n    }\r\n    this.api.putTeams(this.form.value, this.team._id).subscribe({\r\n      next: (res) => {\r\n        showAlert('success', 'Correcto', 'Team actualizado correctamente', 'btn btn-fill btn-info').then((result: any) => {\r\n          this.close();\r\n        });\r\n      },\r\n      error: (err) => {\r\n        if (err.error.message.message.includes('name is already in use')) {\r\n          showAlert('error', 'Error', 'El nombre proporcionado ya está registrado en el sistema. Por favor, ingresa un nombre diferente.', 'btn btn-info');\r\n        } else {\r\n          showAlert('error', 'Error', 'Algo ha salido mal, por favor inténtalo de nuevo más tarde.', 'btn btn-info');\r\n        }\r\n      }\r\n    });\r\n  }\r\n  convertFile(file: File): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        const base64String = btoa(reader.result as string);\r\n        resolve(base64String);\r\n      };\r\n\r\n      reader.onerror = () => {\r\n        reject('Error al leer el archivo.');\r\n      };\r\n\r\n      // Verifica que el archivo sea una imagen antes de leerlo\r\n      if (file.type.match(/image.*/)) {\r\n        reader.readAsBinaryString(file);\r\n      } else {\r\n        reject('El archivo seleccionado no es una imagen.');\r\n      }\r\n    });\r\n  }\r\n\r\n  convertFileExist(imageUrl) {\r\n    let base64data: string;\r\n    fetch(imageUrl)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = () => {\r\n          base64data = String(reader.result);\r\n          this.sendFileToOnSelect(base64data);\r\n        };\r\n      })\r\n      .catch(error => {\r\n        // showAlert('error', 'Error', 'Algo ha salido mal al cargar la imagen, intente más tarde!', 'btn btn-info');\r\n\r\n        // console.error('Error al obtener la imagen:', error);\r\n      });\r\n  }\r\n\r\n  sendFileToOnSelect(base64data) {\r\n    const byteCharacters = atob(base64data.split(',')[1]);\r\n    const byteNumbers = new Array(byteCharacters.length);\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    const fileBlob = new Blob([byteArray], { type: 'image/jpeg' });\r\n\r\n    // Crear un objeto File a partir del Blob\r\n    const file = new File([fileBlob], 'nombre_archivo.jpg', { type: 'image/jpeg' });\r\n\r\n    let event = {\r\n      addedFiles: [file]\r\n    }\r\n    this.onSelect(event);\r\n  }\r\n\r\n  get errorsForm() { return this.form.controls; }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AddTeamsComponent } from './add-teams/add-teams.component';\r\nimport { Router } from '@angular/router';;\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\n\r\n@Component({\r\n  selector: 'app-teams',\r\n  templateUrl: './teams.component.html',\r\n  styleUrls: ['./teams.component.scss']\r\n})\r\nexport class TeamsComponent implements OnInit {\r\n  teams: any[] = [];\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 10, total: 1 };\r\n  wordToSearch: string = '';\r\n  count: number = 0;\r\n  searchForm: FormGroup;\r\n  role: string = '';\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public fb: FormBuilder,\r\n    private api: ApiService,\r\n    public router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.role = localStorage.getItem('role');\r\n    this.createForm();\r\n    this.getTeams();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.fb.group({\r\n      value: ['']\r\n    });\r\n  }\r\n\r\n  getTeams() {\r\n    this.wordToSearch = this.searchForm.value.value;\r\n    this.api.getTeams(this.pagination.page, this.pagination.itemsPage, this.wordToSearch).subscribe({\r\n      next: (resp: any) => {\r\n        this.teams = resp.body.teams;\r\n        this.pagination = resp.body.pagination;\r\n        this.count = resp.body.pagination.total;\r\n      },\r\n      error: (err) => {\r\n        showAlert('error', 'Error', 'Algo ha salido mal, intente más tarde!', 'btn btn-info');\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(opt: any, team?: any) {\r\n    const modal = this.dialog.open(AddTeamsComponent, {\r\n      width: '800px',\r\n      data: {\r\n        title: opt,\r\n        team\r\n      }\r\n    });\r\n\r\n    modal.afterClosed().subscribe(_ => {\r\n      this.getTeams();\r\n    });\r\n  }\r\n\r\n  showPlants(team: { _id: any; name: any; }) {\r\n    let data = {\r\n      id: team._id,\r\n      name: team.name\r\n    }\r\n    let parameter = btoa(JSON.stringify(data));\r\n    this.router.navigate(['neighborhoods/' + parameter]);\r\n  }\r\n\r\n  showUsers(team: { _id: any; name: any; }) {\r\n    let data = {\r\n      id: team._id,\r\n      name: team.name\r\n    }\r\n\r\n    let parameter = btoa(JSON.stringify(data));\r\n    this.router.navigate(['operator-team/' + parameter]);\r\n  }\r\n\r\n  changePage(eventPage: PageEvent) {\r\n    this.pagination.page = eventPage.pageIndex + 1;\r\n    this.getTeams();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TeamsComponent } from './teams.component';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HomeRoutes } from './teams.routes';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Event } from 'typescript.events';\r\nimport { AddTeamsComponent } from './add-teams/add-teams.component';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TeamsComponent,\r\n    AddTeamsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    RouterModule.forChild(HomeRoutes),\r\n    MaterialModule,\r\n    NgxDropzoneModule\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class TeamsModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { TeamsComponent } from './teams.component';\r\n\r\n\r\nexport const HomeRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: TeamsComponent\r\n        }]\r\n    }\r\n];","export default \"<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n    <h6 class=\\\"modal-title\\\">{{title}} Team</h6>\\r\\n    <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n        <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-xs-12 col-sm-12 col-md-12\\\">\\r\\n                        <div class=\\\"custom-dropzone-p\\\" ngx-dropzone [accept]=\\\"'image/*'\\\" (change)=\\\"onSelect($event)\\\">\\r\\n                            <ngx-dropzone-label>\\r\\n                                <div>\\r\\n                                    <img src=\\\"assets/img/icons/upload.png\\\" width=\\\"64px\\\" height=\\\"64px\\\"\\r\\n                                        alt=\\\"Imagen del team\\\">\\r\\n                                    <h6 style=\\\"color: #000;\\\">Subir imagen del team</h6>\\r\\n                                </div>\\r\\n                            </ngx-dropzone-label>\\r\\n                            <ngx-dropzone-image-preview class=\\\"center\\\" id=\\\"preview\\\" ngProjectAs=\\\"ngx-dropzone-preview\\\"\\r\\n                                *ngFor=\\\"let f of files\\\" [file]=\\\"f[0]\\\" [removable]=\\\"true\\\" (removed)=\\\"onRemove(f[0])\\\">\\r\\n                            </ngx-dropzone-image-preview>\\r\\n                        </div>\\r\\n                        <input type=\\\"hidden\\\" required formControlName=\\\"imgName\\\" id=\\\"imgName\\\" name=\\\"imgName\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-4 col-md-4\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Nombre</mat-label>\\r\\n                        <input matInput name=\\\"name\\\" formControlName=\\\"name\\\"\\r\\n                            oninput=\\\"javascript:this.value=this.value.toUpperCase();\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.name.touched) && errorsForm.name.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-4 col-md-4\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Inicio Licencia</mat-label>\\r\\n                        <input type=\\\"date\\\" matInput name=\\\"licenseStart\\\" formControlName=\\\"licenseStart\\\">\\r\\n                        <mat-error\\r\\n                            *ngIf=\\\"(errorsForm.licenseStart.touched) && errorsForm.licenseStart.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-4 col-md-4\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Fin Licencia</mat-label>\\r\\n                        <input type=\\\"date\\\" matInput name=\\\"licenseEnd\\\" formControlName=\\\"licenseEnd\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.licenseEnd.touched) && errorsForm.licenseEnd.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <br>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-2 col-md-2\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Máximo centrales</mat-label>\\r\\n                        <input type=\\\"number\\\" matInput name=\\\"maxPlants\\\" formControlName=\\\"maxPlants\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.maxPlants.touched) && errorsForm.maxPlants.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-2 col-md-2\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Máximo botones</mat-label>\\r\\n                        <input type=\\\"number\\\" matInput name=\\\"maxButtons\\\" formControlName=\\\"maxButtons\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.maxButtons.touched) && errorsForm.maxButtons.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-2 col-md-2\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Máximo usuarios</mat-label>\\r\\n                        <input type=\\\"number\\\" matInput name=\\\"maxUsers\\\" formControlName=\\\"maxUsers\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.maxUsers.touched) && errorsForm.maxUsers.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-2 col-md-2\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Radio cobertura (m)</mat-label>\\r\\n                        <input type=\\\"number\\\" matInput name=\\\"radius\\\" formControlName=\\\"radius\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.radius.touched) && errorsForm.radius.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-4 col-md-4\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Compania</mat-label>\\r\\n                        <mat-select name=\\\"company\\\" formControlName=\\\"company\\\">\\r\\n                            <mat-option value=\\\"\\\"> Seleccionar </mat-option>\\r\\n                            <mat-option value=\\\"ABIC\\\"> ABIC </mat-option>\\r\\n                            <mat-option value=\\\"SHADOW\\\"> SHADOW </mat-option>\\r\\n                          </mat-select>\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.company.touched) && errorsForm.company.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n    <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"configTeams()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\">\\r\\n        Guardar\\r\\n    </button>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\">\\r\\n                        <h4 class=\\\"title\\\">Teams: {{ count }}</h4>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <form [formGroup]=\\\"searchForm\\\" class=\\\"form-horizontal\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                                    style=\\\"border: 2px #000000;\\\">\\r\\n                                    <mat-label>Buscar por nombre</mat-label>\\r\\n                                    <input matInput name=\\\"value\\\" (keyup)=\\\"getTeams()\\\" formControlName=\\\"value\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <br>\\r\\n                    <div class=\\\"content table-responsive table-full-width\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Nombre</th>\\r\\n                                    <th class=\\\"text-right\\\">Acciones</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody *ngIf=\\\"count > 0\\\">\\r\\n                                <tr *ngFor=\\\"let team of teams; let i=index;\\\">\\r\\n                                    <td class=\\\"td-size\\\">{{team.name}}</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <a (click)=\\\"showPlants(team)\\\" rel=\\\"tooltip\\\" title=\\\"Ver Centrales\\\"\\r\\n                                            class=\\\"btn btn-primary btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a *ngIf=\\\"role === ('SUPER-ADMIN' || 'ADMINISTRATOR')\\\"\\r\\n                                            (click)=\\\"openModal('Editar', team)\\\" rel=\\\"tooltip\\\" title=\\\"Editar\\\"\\r\\n                                            class=\\\"btn btn-warning btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a *ngIf=\\\"role === ('SUPER-ADMIN' || 'ADMINISTRATOR')\\\" (click)=\\\"showUsers(team)\\\"\\r\\n                                            rel=\\\"tooltip\\\" title=\\\"Ver Operadores\\\" class=\\\"btn btn-info btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-users\\\"></i>\\r\\n                                        </a>\\r\\n                                        <!-- <a (click)=\\\"questionYN(i)\\\" rel=\\\"tooltip\\\" title=\\\"Eliminar\\\" data-toggle=\\\"modal\\\" data-target=\\\"#delete\\\" class=\\\"btn btn-danger btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </a> -->\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <p class=\\\"msg-empty\\\" *ngIf=\\\"count === 0\\\">No existen registros</p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div *ngIf=\\\"count !==0\\\" class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col d-flex justify-content-end\\\">\\r\\n                                <mat-paginator #paginator showFirstLastButtons [length]=\\\"pagination?.total\\\"\\r\\n                                    [pageSize]=\\\"pagination?.itemsPage\\\" (page)=\\\"changePage($event)\\\">\\r\\n                                </mat-paginator>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<caption>\\r\\n    <button *ngIf=\\\"role === ('SUPER-ADMIN' || 'ADMINISTRATOR')\\\" (click)=\\\"openModal('Agregar')\\\" id=\\\"addBtn\\\"\\r\\n        class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n        <img src=\\\"assets/img/icons/mas.png\\\">\\r\\n    </button>\\r\\n</caption>\";"],"names":["Component","Inject","FormBuilder","FormControl","Validators","MAT_DIALOG_DATA","MatDialog","MatDialogRef","ApiService","showAlert","Event","FileUploadValidators","AddTeamsComponent","constructor","dialogRef","dialog","data","fb","api","events","filesLimit","disableClose","title","team","ngOnInit","createForm","form","group","name","required","licenseStart","Date","parse","toISOString","substring","licenseEnd","maxPlants","maxButtons","maxUsers","radius","company","image","imgName","onSelect","event","files","addedFiles","filesControl","get","setValue","onRemove","splice","indexOf","configTeams","putTeams","postTeams","value","imageBase","convertFile","subscribe","next","res","then","result","close","error","err","message","includes","_id","file","Promise","resolve","reject","reader","FileReader","onload","base64String","btoa","onerror","type","match","readAsBinaryString","convertFileExist","imageUrl","base64data","fetch","response","blob","readAsDataURL","onloadend","String","sendFileToOnSelect","catch","byteCharacters","atob","split","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","fileBlob","Blob","File","errorsForm","controls","args","selector","template"],"sourceRoot":"webpack:///"}