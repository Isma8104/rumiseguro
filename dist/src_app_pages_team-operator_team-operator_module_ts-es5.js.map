{"version":3,"mappings":"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","names":["SelectOperatorComponent","dialogRef","dialog","data","fb","api","events","page","pages","itemsPage","total","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","idTeam","team","createForm","getOperators","searchForm","group","value","pagination","subscribe","operators","resp","body","filteredOperators","operatorCtrl","valueChanges","pipe","_filterOperator","err","postOperatorTeam","selectOperator","_id","then","result","close","word","error","message","filterValue","filter","item","fullName","includes","event","option","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","args","src_app_services_api_service__WEBPACK_IMPORTED_MODULE_3__","typescript_events__WEBPACK_IMPORTED_MODULE_5__","selector","template","TeamOperatorComponent","route","_api","router","parameters","JSON","parse","atob","snapshot","paramMap","get","getOperatorByTeam","wordToSearch","getOperatorsByTeam","id","count","modal","open","_select_operator_select_operator_component__WEBPACK_IMPORTED_MODULE_4__","width","afterClosed","eventPage","pageIndex","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","src_app_services_api_service__WEBPACK_IMPORTED_MODULE_2__","TeamOperatorModule","declarations","_team_operator_component__WEBPACK_IMPORTED_MODULE_0__","_select_operator_select_operator_component__WEBPACK_IMPORTED_MODULE_1__","imports","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_10__","_team_operator_routes__WEBPACK_IMPORTED_MODULE_4__","src_app_material_material_module__WEBPACK_IMPORTED_MODULE_3__","ngx_dropzone__WEBPACK_IMPORTED_MODULE_11__","providers","TeamOperatorRoutes","path","children","component","__webpack_exports__"],"sources":["webpack:///src/app/pages/team-operator/select-operator/select-operator.component.ts","webpack:///src/app/pages/team-operator/team-operator.component.ts","webpack:///src/app/pages/team-operator/team-operator.module.ts","webpack:///src/app/pages/team-operator/team-operator.routes.ts","webpack:///src/app/pages/team-operator/select-operator/select-operator.component.html","webpack:///src/app/pages/team-operator/team-operator.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\nimport { Event } from 'typescript.events';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-select-operator',\r\n  templateUrl: './select-operator.component.html',\r\n  styleUrls: ['./select-operator.component.scss']\r\n})\r\nexport class SelectOperatorComponent implements OnInit {\r\n  title = \"\";\r\n  idTeam;\r\n  searchForm: FormGroup;\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 1000, total: 1 };\r\n  operators: any[] = [];\r\n  word: \"\";\r\n\r\n  filteredOperators: Observable<any[]>;\r\n  operatorCtrl = new FormControl();\r\n  selectOperator;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SelectOperatorComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    public events: Event\r\n  ) {\r\n    this.idTeam = data.team;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getOperators();\r\n  }\r\n\r\n  createForm(){\r\n    this.searchForm = this.fb.group({\r\n      value: ['']\r\n    });\r\n  }\r\n\r\n  getOperators(){\r\n    this.api.getOperators(this.pagination.page, this.pagination.itemsPage, \"\").subscribe(resp => {\r\n      this.operators = resp.body['administrators'];\r\n      \r\n      this.filteredOperators = this.operatorCtrl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filterOperator(value))\r\n      );\r\n    }, (err) => {\r\n      showAlert('error', 'Error', 'Algo ha salido mal, intente mÃ¡s tarde!', 'btn btn-info');\r\n    });\r\n  }\r\n\r\n  postOperatorTeam(){\r\n    startLoading();\r\n    this.api.postOperatorTeam(this.selectOperator._id,  this.idTeam).subscribe(resp =>  {\r\n      finishLoading();\r\n      showAlert('success', 'Correcto', 'Operador asignado correctamente', 'btn btn-fill btn-info').then((result: any) => {\r\n          this.close();\r\n      });\r\n    },  (err) => {\r\n      finishLoading();\r\n      this.word =\"\";\r\n      showAlert('error', 'Error', err.error.message,  'btn  btn-fill btn-info');\r\n    });\r\n  }\r\n\r\n  private _filterOperator(value: string): any[] {\r\n    const filterValue = value;\r\n    return this.operators.filter(item => item.fullName.includes(filterValue));   \r\n}\r\n\r\n  selected(event){\r\n    this.word = event.option.value.fullName;\r\n    this.selectOperator = event.option.value;\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\nimport { SelectOperatorComponent } from './select-operator/select-operator.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-team-operator',\r\n  templateUrl: './team-operator.component.html',\r\n  styleUrls: ['./team-operator.component.scss']\r\n})\r\nexport class TeamOperatorComponent implements OnInit {\r\n  team;\r\n  operators: any[] = [];\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 10, total: 1 };\r\n  wordToSearch: string = '';\r\n  count: number = 0;\r\n  searchForm: FormGroup;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public fb: FormBuilder,\r\n    public route: ActivatedRoute,\r\n    private _api: ApiService,\r\n    public router: Router,\r\n  ) {\r\n    let parameters = JSON.parse(atob(route.snapshot.paramMap.get('parameters')));\r\n    this.team = parameters;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getOperatorByTeam();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.fb.group({\r\n      value: ['']\r\n    });\r\n  }\r\n\r\n  getOperatorByTeam() {\r\n    this.wordToSearch = this.searchForm.value.value;\r\n    this._api.getOperatorsByTeam(this.team.id, this.pagination.page, this.pagination.itemsPage, this.wordToSearch).subscribe(resp => {\r\n      this.operators = resp.body['users'];\r\n      this.count = resp.body['pagination']['total'];\r\n      this.pagination = resp.body['pagination'];\r\n    }, (err) => {\r\n      showAlert('error', 'Error', 'Algo ha salido mal, intente mÃ¡s tarde!', 'btn btn-info');\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = this.dialog.open(SelectOperatorComponent, {\r\n      width: '400px',\r\n      data: {\r\n        team: this.team.id\r\n      }\r\n    });\r\n\r\n    modal.afterClosed().subscribe(result => {\r\n      this.getOperatorByTeam();\r\n    });\r\n  }\r\n\r\n  changePage(eventPage: PageEvent) {\r\n    this.pagination.page = eventPage.pageIndex + 1;\r\n    this.getOperatorByTeam();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TeamOperatorComponent } from './team-operator.component';\r\nimport { SelectOperatorComponent } from './select-operator/select-operator.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { TeamOperatorRoutes } from './team-operator.routes';\r\nimport { Event } from 'typescript.events';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TeamOperatorComponent,\r\n    SelectOperatorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    RouterModule.forChild(TeamOperatorRoutes),\r\n    MaterialModule,\r\n    NgxDropzoneModule,\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class TeamOperatorModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { TeamOperatorComponent } from './team-operator.component';\r\n\r\nexport const TeamOperatorRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: TeamOperatorComponent\r\n        }]\r\n    }\r\n];","export default \"<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n    <h6 class=\\\"modal-title\\\">Asignar Operador</h6>\\r\\n    <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n        <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"searchForm\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                        style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Seleccionar Operador</mat-label>\\r\\n                        <input type=\\\"search\\\" matInput placeholder=\\\"Buscar team\\\" [matAutocomplete]=\\\"auto\\\"\\r\\n                            [ngModel]=\\\"word\\\" [formControl]=\\\"operatorCtrl\\\">\\r\\n                        <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n                            <mat-option *ngFor=\\\"let item of filteredOperators | async\\\" [value]=\\\"item\\\">\\r\\n                                {{ item.fullName }}\\r\\n                            </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                    </mat-form-field>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n    <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"postOperatorTeam()\\\" [disabled]=\\\"!searchForm.valid\\\"\\r\\n        type=\\\"button\\\">\\r\\n        Guardar\\r\\n    </button>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\">\\r\\n                        <h4 class=\\\"title\\\">Operadores Team {{team.name}}: {{ count }}</h4>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <form [formGroup]=\\\"searchForm\\\" class=\\\"form-horizontal\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\"\\r\\n                                    style=\\\"border: 2px #000000;\\\">\\r\\n                                    <mat-label>Buscar por operador</mat-label>\\r\\n                                    <input matInput name=\\\"value\\\" (keyup)=\\\"getOperatorByTeam()\\\" formControlName=\\\"value\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <br>\\r\\n                    <div class=\\\"content table-responsive table-full-width\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Nombre</th>\\r\\n                                    <th class=\\\"text-right\\\">Acciones</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody *ngIf=\\\"operators.length > 0\\\">\\r\\n                                <tr *ngFor=\\\"let team of operators; let i=index;\\\">\\r\\n                                    <td>{{team.fullName}}</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <!-- <a (click)=\\\"showPlants(team)\\\" rel=\\\"tooltip\\\" title=\\\"Ver Centrales\\\" class=\\\"btn btn-primary btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a (click)=\\\"openModal('Editar', team)\\\" rel=\\\"tooltip\\\" title=\\\"Editar\\\" class=\\\"btn btn-warning btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a (click)=\\\"viewUsers(team.id)\\\" rel=\\\"tooltip\\\" title=\\\"Ver Operadores\\\" class=\\\"btn btn-info btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-users\\\"></i>\\r\\n                                        </a> -->\\r\\n                                        <!-- <a (click)=\\\"questionYN(i)\\\" rel=\\\"tooltip\\\" title=\\\"Eliminar\\\" data-toggle=\\\"modal\\\"\\r\\n                                            data-target=\\\"#delete\\\" class=\\\"btn btn-danger btn-simple btn-xs\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </a> -->\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <p class=\\\"msg-empty\\\" *ngIf=\\\"operators.length ===  0\\\">No existen registros</p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div *ngIf=\\\"operators?.length !==0\\\" class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col d-flex justify-content-end\\\">\\r\\n                                <mat-paginator #paginator showFirstLastButtons [length]=\\\"pagination.total\\\"\\r\\n                                    [pageSize]=\\\"pagination.itemsPage\\\" (page)=\\\"changePage($event)\\\">\\r\\n                                </mat-paginator>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<caption>\\r\\n    <button (click)=\\\"openModal()\\\" id=\\\"addBtn\\\" class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n        <img src=\\\"assets/img/icons/mas.png\\\">\\r\\n    </button>\\r\\n</caption>\";"]}