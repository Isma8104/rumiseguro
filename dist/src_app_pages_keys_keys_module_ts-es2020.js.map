{"version":3,"file":"src_app_pages_keys_keys_module_ts-es2020.js","mappings":"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","sources":["./src/app/pages/keys/generateKeys/generate-key.component.ts","./src/app/pages/keys/keys.component.ts","./src/app/pages/keys/keys.module.ts","./src/app/pages/keys/keys.routes.ts","./src/app/pages/keys/generateKeys/generate-key.component.html","./src/app/pages/keys/keys.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finishLoading, startLoading } from 'src/app/components/loading/loader';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\nimport { Event } from 'typescript.events';\r\n\r\n@Component({\r\n  selector: 'app-generate-key',\r\n  templateUrl: './generate-key.component.html',\r\n  styleUrls: ['./generate-key.component.scss']\r\n})\r\nexport class GenerateKeysComponent implements OnInit {\r\n  title = \"\";\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GenerateKeysComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    public api: ApiService,\r\n    public events: Event\r\n  ) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm(){\r\n    this.form = this.fb.group({\r\n      quantity: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n\r\n  generateKeys(){\r\n    this.api.generateKeys(this.form.value.quantity).subscribe(resp  => {\r\n        showAlert('success', 'Correcto', 'C칩digo creado correctamente', 'btn btn-fill btn-info').then((result: any) => {\r\n            this.close();\r\n        });\r\n    }, (err) => {\r\n        showAlert('error', 'Error', 'Algo ha salido mal, intente m치s tarde!', 'btn btn-info');\r\n    })\r\n  }\r\n\r\n  get errorsForm() { return this.form.controls; }\r\n\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IPagination } from 'src/app/components/pagination/pagination.interface';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { GenerateKeysComponent } from './generateKeys/generate-key.component';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { showAlert } from 'src/app/utils/swal-alert';\r\n\r\n@Component({\r\n  selector: 'app-keys',\r\n  templateUrl: './keys.component.html',\r\n  styleUrls: ['./keys.component.scss']\r\n})\r\nexport class KeysComponent implements OnInit {\r\n  keys: any[] = [];\r\n  searchForm: FormGroup;\r\n  pagination: IPagination = { page: 1, pages: 1, itemsPage: 10, total: 1 };\r\n  wordToSearch: string = '';\r\n  count: number = 0;\r\n\r\n  constructor(\r\n    private _api: ApiService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getKeys();\r\n  }\r\n\r\n  getKeys() {\r\n    this._api.getKeys(this.pagination.page, this.pagination.itemsPage).subscribe({\r\n      next: (resp: any) => {\r\n        this.keys = resp.body.keys;\r\n        this.pagination = resp.body.pagination;\r\n        this.count = resp.body.pagination.total;\r\n      },\r\n      error: (err) => {\r\n        showAlert('error', 'Error', 'Algo ha salido mal, intente m치s tarde!', 'btn btn-info');\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const openModal = this.dialog.open(GenerateKeysComponent, {\r\n      width: '300px'\r\n    });\r\n\r\n    openModal.afterClosed().subscribe(result => {\r\n      this.getKeys();\r\n    });\r\n  }\r\n\r\n  changePage(eventPage: PageEvent) {\r\n    this.pagination.page = eventPage.pageIndex + 1;\r\n    this.getKeys();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KeysComponent } from './keys.component';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { MaterialModule } from 'src/app/material/material.module';\r\nimport { KeysRoutes } from './keys.routes';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Event } from 'typescript.events';\r\nimport { GenerateKeysComponent } from './generateKeys/generate-key.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    KeysComponent,\r\n    GenerateKeysComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule.forRoot(),\r\n    RouterModule.forChild(KeysRoutes),\r\n    MaterialModule,\r\n    NgxDropzoneModule,\r\n    ComponentsModule\r\n  ],\r\n  providers: [\r\n    Event\r\n  ]\r\n})\r\nexport class KeysModule { }\r\n","import  { Routes } from '@angular/router';\r\nimport { KeysComponent } from './keys.component';\r\n\r\n\r\nexport const KeysRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [{\r\n            path: '',\r\n            component: KeysComponent\r\n        }]\r\n    }\r\n];","export default \"<div class=\\\"modal-header1 text-left row mb-1\\\">\\r\\n    <h6 class=\\\"modal-title\\\">Generar C칩digos</h6>\\r\\n    <button type=\\\"button\\\" class=\\\"close mt--5 mr--2\\\" (click)=\\\"close()\\\">\\r\\n        <i class=\\\"fa fa-times icon-modal-close\\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <mat-form-field class=\\\"col-xs-12 col-sm-12 col-md-12\\\" appearance=\\\"outline\\\" style=\\\"border: 2px #000000;\\\">\\r\\n                        <mat-label>Cantidad</mat-label>\\r\\n                        <input type=\\\"number\\\"  matInput name=\\\"quantity\\\" formControlName=\\\"quantity\\\">\\r\\n                        <mat-error *ngIf=\\\"(errorsForm.quantity.touched) && errorsForm.quantity.errors?.required\\\">\\r\\n                            Campo obligatorio\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions align=\\\"end\\\" class=\\\"dialog-footer\\\">\\r\\n    <button class=\\\"btn btn-fill btn-info btn-md\\\" (click)=\\\"generateKeys()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"button\\\">\\r\\n        Guardar \\r\\n    </button>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"header\\\">\\r\\n                        <h4 class=\\\"title\\\">C칩digos: {{count}}</h4>\\r\\n                        <p class=\\\"category\\\"></p>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"content table-responsive table-full-width\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>C칩digo</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody *ngIf=\\\"keys.length > 0\\\">\\r\\n                                <tr *ngFor=\\\"let item of keys; let i=index;\\\">\\r\\n                                    <td>{{item.key}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <p class=\\\"msg-empty\\\" *ngIf=\\\"keys.length ===  0\\\">No existen registros</p>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div *ngIf=\\\"keys?.length !==0\\\" class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col d-flex justify-content-end\\\">\\r\\n                                <mat-paginator #paginator showFirstLastButtons [length]=\\\"pagination.total\\\"\\r\\n                                    [pageSize]=\\\"pagination.itemsPage\\\" (page)=\\\"changePage($event)\\\">\\r\\n                                </mat-paginator>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<caption>\\r\\n    <button (click)=\\\"openModal()\\\" id=\\\"addBtn\\\" class=\\\"btn btn-icon btn-round btn-twitter\\\">\\r\\n        <img src=\\\"assets/img/icons/mas.png\\\">\\r\\n      </button>\\r\\n</caption>\";"],"names":[],"sourceRoot":"webpack:///"}